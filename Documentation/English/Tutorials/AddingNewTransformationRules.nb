(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   TextData[
    {
     "New in: ",
     Cell["", "HistoryData", CellTags -> "New"],
     " | Modified in: ",
     Cell[" ", "HistoryData", CellTags -> "Modified"],
     " | Obsolete in: ",
     Cell[" ", "HistoryData", CellTags -> "Obsolete"],
     " | Excised in: ",
     Cell[" ", "HistoryData", CellTags -> "Excised"]
    }
   ],
   "History",
   CellID -> 1247902091
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Categorization",
      "CategorizationSection",
      CellID -> 1122911449
     ],
     Cell[
      "Tech Note",
      "Categorization",
      CellLabel -> "Entity Type",
      CellID -> 686433507
     ],
     Cell[
      "Wolfram/CodeEquivalenceUtilities",
      "Categorization",
      CellLabel -> "Paclet Name",
      CellID -> 605800465
     ],
     Cell[
      "Wolfram`CodeEquivalenceUtilities`",
      "Categorization",
      CellLabel -> "Context",
      CellID -> 468444828
     ],
     Cell[
      "Wolfram/CodeEquivalenceUtilities/tutorial/AddingNewTransformationRules",
      "Categorization",
      CellLabel -> "URI",
      CellID -> 80955715
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell["Keywords", "KeywordsSection", CellID -> 1427428552],
     Cell["XXXX", "Keywords", CellID -> 1251852827]
    },
    Closed
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Adding New Transformation Rules",
      "Title",
      CellID -> 509267359
     ],
     Cell[
      "This explains how to find, test, and deploy new transformation rules.",
      "Text",
      CellID -> 1534169418
     ],
     Cell[
      CellGroupData[
       {
        Cell["Finding Rules", "Section", CellID -> 410790792],
        Cell[
         CellGroupData[
          {
           Cell[
            "Generating Canonical Forms of Expressions",
            "Subsection",
            CellID -> 65865617
           ],
           Cell[
            BoxData[
             GridBox[
              {
               {
                ButtonBox[
                 "ToCanonicalForm",
                 BaseStyle -> "Link",
                 ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/ToCanonicalForm"
                ],
                Cell[
                 "converts an expression into canonical form",
                 "TableText"
                ]
               },
               {
                ButtonBox[
                 "MakeCanonicalForm",
                 BaseStyle -> "Link",
                 ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/MakeCanonicalForm"
                ],
                Cell[
                 "converts an expression into canonical form without evaluation",
                 "TableText"
                ]
               }
              }
             ]
            ],
            "DefinitionBox",
            CellID -> 2096742444
           ],
           Cell[
            "Utility functions for seeing the canonical form of an expression.",
            "Caption",
            CellID -> 1891092685
           ],
           Cell[
            "Equivalence of code is determined by comparing their canonical representations.",
            "Text",
            CellID -> 482068402
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Check if two expressions are equivalent:",
               "MathCaption",
               CellID -> 154435096
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "CodeEquivalentQ",
                     "[",
                     RowBox[
                      {
                       RowBox[
                        {"RandomInteger", "/@", RowBox[{"Range", "[", "5", "]"}]}
                       ],
                       ",",
                       RowBox[
                        {"Array", "[", RowBox[{"RandomInteger", ",", "5"}], "]"}
                       ]
                      }
                     ],
                     "]"
                    }
                   ]
                  ],
                  "Input",
                  CellLabel -> "In[7]:=",
                  CellID -> 14833675
                 ],
                 Cell[
                  BoxData["True"],
                  "Output",
                  CellLabel -> "Out[7]=",
                  CellID -> 162673606
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Compare their canonical forms:",
               "MathCaption",
               CellID -> 836781195
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "MakeCanonicalForm",
                     "[",
                     RowBox[
                      {"RandomInteger", "/@", RowBox[{"Range", "[", "5", "]"}]}
                     ],
                     "]"
                    }
                   ]
                  ],
                  "Input",
                  CellLabel -> "In[8]:=",
                  CellID -> 739122949
                 ],
                 Cell[
                  BoxData[
                   TagBox[
                    RowBox[
                     {
                      "Table",
                      "[",
                      RowBox[
                       {
                        RowBox[
                         {
                          InterpretationBox[
                           TagBox[
                            TooltipBox[
                             StyleBox[
                              FrameBox[
                               "\"\[ScriptCapitalR]\"",
                               Background ->
                                RGBColor[
                                 {Rational[199, 255], Rational[72, 85], Rational[152, 255]}
                                ],
                               ContentPadding -> False,
                               FrameMargins -> 3,
                               RoundingRadius -> 3,
                               StripOnInput -> False
                              ],
                              StripOnInput -> False,
                              ShowStringCharacters -> False,
                              FontWeight -> Bold,
                              FontColor ->
                               RGBColor[
                                {Rational[107, 255], Rational[44, 85], Rational[37, 255]}
                               ]
                             ],
                             "\"RandomValue\"",
                             TooltipStyle -> "TextStyling"
                            ],
                            Annotation[#1, "RandomValue", "Tooltip"] &
                           ],
                           CodeEquivalenceUtilities`CanonicalForms`Common`RandomValue
                          ],
                          "[",
                          RowBox[
                           {
                            "DiscreteUniformDistribution",
                            "[",
                            RowBox[
                             {
                              "{",
                              RowBox[
                               {
                                "0",
                                ",",
                                InterpretationBox[
                                 TagBox[
                                  TooltipBox[
                                   FrameBox[
                                    Cell[
                                     TextData[
                                      {
                                       StyleBox[
                                        "S1",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                         ]
                                       ],
                                       StyleBox[
                                        "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                         ]
                                       ],
                                       StyleBox[
                                        "Int",
                                        FontWeight -> "Plain",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                         ]
                                       ]
                                      }
                                     ],
                                     "Text"
                                    ],
                                    Background ->
                                     RGBColor[
                                      {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                     ],
                                    ContentPadding -> False,
                                    FrameMargins -> 2,
                                    RoundingRadius -> 2,
                                    StripOnInput -> False
                                   ],
                                   "\"TypedSymbol[CodeEquivalenceUtilities`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                                  ],
                                  #1 &
                                 ],
                                 CodeEquivalenceUtilities`Types`TypedSymbol[
                                  CodeEquivalenceUtilities`CanonicalForms`Scope`LocalSymbols`S1,
                                  Blank[Integer]
                                 ]
                                ]
                               }
                              ],
                              "}"
                             }
                            ],
                            "]"
                           }
                          ],
                          "]"
                         }
                        ],
                        ",",
                        RowBox[
                         {
                          "{",
                          RowBox[
                           {
                            InterpretationBox[
                             TagBox[
                              TooltipBox[
                               FrameBox[
                                Cell[
                                 TextData[
                                  {
                                   StyleBox[
                                    "S1",
                                    FontWeight -> "Bold",
                                    FontColor ->
                                     RGBColor[
                                      {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                     ]
                                   ],
                                   StyleBox[
                                    "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                    FontWeight -> "Bold",
                                    FontColor ->
                                     RGBColor[
                                      {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                     ]
                                   ],
                                   StyleBox[
                                    "Int",
                                    FontWeight -> "Plain",
                                    FontColor ->
                                     RGBColor[
                                      {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                     ]
                                   ]
                                  }
                                 ],
                                 "Text"
                                ],
                                Background ->
                                 RGBColor[
                                  {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                 ],
                                ContentPadding -> False,
                                FrameMargins -> 2,
                                RoundingRadius -> 2,
                                StripOnInput -> False
                               ],
                               "\"TypedSymbol[CodeEquivalenceUtilities`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                              ],
                              #1 &
                             ],
                             CodeEquivalenceUtilities`Types`TypedSymbol[
                              CodeEquivalenceUtilities`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ]
                            ],
                            ",",
                            "1",
                            ",",
                            "5",
                            ",",
                            "1"
                           }
                          ],
                          "}"
                         }
                        ]
                       }
                      ],
                      "]"
                     }
                    ],
                    HoldForm
                   ]
                  ],
                  "Output",
                  CellLabel -> "Out[8]=",
                  CellID -> 549073816
                 ]
                },
                Open
               ]
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "MakeCanonicalForm",
                     "[",
                     RowBox[
                      {"Array", "[", RowBox[{"RandomInteger", ",", "5"}], "]"}
                     ],
                     "]"
                    }
                   ]
                  ],
                  "Input",
                  CellLabel -> "In[9]:=",
                  CellID -> 21442341
                 ],
                 Cell[
                  BoxData[
                   TagBox[
                    RowBox[
                     {
                      "Table",
                      "[",
                      RowBox[
                       {
                        RowBox[
                         {
                          InterpretationBox[
                           TagBox[
                            TooltipBox[
                             StyleBox[
                              FrameBox[
                               "\"\[ScriptCapitalR]\"",
                               Background ->
                                RGBColor[
                                 {Rational[199, 255], Rational[72, 85], Rational[152, 255]}
                                ],
                               ContentPadding -> False,
                               FrameMargins -> 3,
                               RoundingRadius -> 3,
                               StripOnInput -> False
                              ],
                              StripOnInput -> False,
                              ShowStringCharacters -> False,
                              FontWeight -> Bold,
                              FontColor ->
                               RGBColor[
                                {Rational[107, 255], Rational[44, 85], Rational[37, 255]}
                               ]
                             ],
                             "\"RandomValue\"",
                             TooltipStyle -> "TextStyling"
                            ],
                            Annotation[#1, "RandomValue", "Tooltip"] &
                           ],
                           CodeEquivalenceUtilities`CanonicalForms`Common`RandomValue
                          ],
                          "[",
                          RowBox[
                           {
                            "DiscreteUniformDistribution",
                            "[",
                            RowBox[
                             {
                              "{",
                              RowBox[
                               {
                                "0",
                                ",",
                                InterpretationBox[
                                 TagBox[
                                  TooltipBox[
                                   FrameBox[
                                    Cell[
                                     TextData[
                                      {
                                       StyleBox[
                                        "S1",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                         ]
                                       ],
                                       StyleBox[
                                        "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                         ]
                                       ],
                                       StyleBox[
                                        "Int",
                                        FontWeight -> "Plain",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                         ]
                                       ]
                                      }
                                     ],
                                     "Text"
                                    ],
                                    Background ->
                                     RGBColor[
                                      {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                     ],
                                    ContentPadding -> False,
                                    FrameMargins -> 2,
                                    RoundingRadius -> 2,
                                    StripOnInput -> False
                                   ],
                                   "\"TypedSymbol[CodeEquivalenceUtilities`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                                  ],
                                  #1 &
                                 ],
                                 CodeEquivalenceUtilities`Types`TypedSymbol[
                                  CodeEquivalenceUtilities`CanonicalForms`Scope`LocalSymbols`S1,
                                  Blank[Integer]
                                 ]
                                ]
                               }
                              ],
                              "}"
                             }
                            ],
                            "]"
                           }
                          ],
                          "]"
                         }
                        ],
                        ",",
                        RowBox[
                         {
                          "{",
                          RowBox[
                           {
                            InterpretationBox[
                             TagBox[
                              TooltipBox[
                               FrameBox[
                                Cell[
                                 TextData[
                                  {
                                   StyleBox[
                                    "S1",
                                    FontWeight -> "Bold",
                                    FontColor ->
                                     RGBColor[
                                      {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                     ]
                                   ],
                                   StyleBox[
                                    "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                    FontWeight -> "Bold",
                                    FontColor ->
                                     RGBColor[
                                      {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                     ]
                                   ],
                                   StyleBox[
                                    "Int",
                                    FontWeight -> "Plain",
                                    FontColor ->
                                     RGBColor[
                                      {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                     ]
                                   ]
                                  }
                                 ],
                                 "Text"
                                ],
                                Background ->
                                 RGBColor[
                                  {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                 ],
                                ContentPadding -> False,
                                FrameMargins -> 2,
                                RoundingRadius -> 2,
                                StripOnInput -> False
                               ],
                               "\"TypedSymbol[CodeEquivalenceUtilities`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                              ],
                              #1 &
                             ],
                             CodeEquivalenceUtilities`Types`TypedSymbol[
                              CodeEquivalenceUtilities`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ]
                            ],
                            ",",
                            "1",
                            ",",
                            "5",
                            ",",
                            "1"
                           }
                          ],
                          "}"
                         }
                        ]
                       }
                      ],
                      "]"
                     }
                    ],
                    HoldForm
                   ]
                  ],
                  "Output",
                  CellLabel -> "Out[9]=",
                  CellID -> 595269289
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "These can be directly compared:",
               "MathCaption",
               CellID -> 464388892
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[RowBox[{"%", "===", "%%"}]],
                  "Input",
                  CellLabel -> "In[10]:=",
                  CellID -> 27901321
                 ],
                 Cell[
                  BoxData["True"],
                  "Output",
                  CellLabel -> "Out[10]=",
                  CellID -> 40604174
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "By tracing the sequence of transformations, you can get an idea of what kind of rule to introduce to get the transformations to converge.",
               "Text",
               CellID -> 396502033
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "expr1",
                     "=",
                     RowBox[
                      {
                       "HoldForm",
                       "[",
                       RowBox[
                        {
                         "Table",
                         "[",
                         RowBox[{RowBox[{"RandomReal", "[", "]"}], ",", "10"}],
                         "]"
                        }
                       ],
                       "]"
                      }
                     ]
                    }
                   ]
                  ],
                  "Input",
                  CellLabel -> "In[3]:=",
                  CellID -> 156681096
                 ],
                 Cell[
                  BoxData[
                   TagBox[
                    RowBox[
                     {
                      "Table",
                      "[",
                      RowBox[{RowBox[{"RandomReal", "[", "]"}], ",", "10"}],
                      "]"
                     }
                    ],
                    HoldForm
                   ]
                  ],
                  "Output",
                  CellLabel -> "Out[3]=",
                  CellID -> 218219969
                 ]
                },
                Open
               ]
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "expr2",
                     "=",
                     RowBox[
                      {
                       "HoldForm",
                       "[",
                       RowBox[
                        {
                         "Table",
                         "[",
                         RowBox[{RowBox[{"RandomReal", "[", "1", "]"}], ",", "10"}],
                         "]"
                        }
                       ],
                       "]"
                      }
                     ]
                    }
                   ]
                  ],
                  "Input",
                  CellLabel -> "In[4]:=",
                  CellID -> 99899526
                 ],
                 Cell[
                  BoxData[
                   TagBox[
                    RowBox[
                     {
                      "Table",
                      "[",
                      RowBox[{RowBox[{"RandomReal", "[", "1", "]"}], ",", "10"}],
                      "]"
                     }
                    ],
                    HoldForm
                   ]
                  ],
                  "Output",
                  CellLabel -> "Out[4]=",
                  CellID -> 638475466
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               TextData[
                {
                 "Notice that the ",
                 Cell[
                  BoxData[
                   RowBox[
                    {ButtonBox["RandomReal", BaseStyle -> "Link"], "[", "]"}
                   ]
                  ],
                  "InlineFormula"
                 ],
                 " does not expand here:"
                }
               ],
               "MathCaption",
               CellID -> 415732716
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     RowBox[
                      {
                       "ToCanonicalForm",
                       "[",
                       RowBox[
                        {"expr1", ",", RowBox[{"\"Trace\"", "\[Rule]", "True"}]}
                       ],
                       "]"
                      }
                     ],
                     "//",
                     "Column"
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 790479855
                 ],
                 Cell[
                  BoxData[
                   TagBox[
                    GridBox[
                     {
                      {
                       TagBox[
                        RowBox[
                         {
                          "Table",
                          "[",
                          RowBox[{RowBox[{"RandomReal", "[", "]"}], ",", "10"}],
                          "]"
                         }
                        ],
                        HoldForm
                       ]
                      },
                      {
                       TagBox[
                        RowBox[
                         {
                          "Table",
                          "[",
                          RowBox[
                           {
                            RowBox[{"RandomReal", "[", "]"}],
                            ",",
                            RowBox[
                             {
                              "{",
                              RowBox[
                               {
                                InterpretationBox[
                                 StyleBox[
                                  "S",
                                  LineColor -> RGBColor[0.84395, 0.34671, 0.33092],
                                  FrontFaceColor -> RGBColor[0.84395, 0.34671, 0.33092],
                                  BackFaceColor -> RGBColor[0.84395, 0.34671, 0.33092],
                                  GraphicsColor -> RGBColor[0.84395, 0.34671, 0.33092],
                                  FontWeight -> Bold,
                                  FontSlant -> Italic,
                                  FontColor -> RGBColor[0.84395, 0.34671, 0.33092]
                                 ],
                                 CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1
                                ],
                                ",",
                                "1",
                                ",",
                                "10",
                                ",",
                                "1"
                               }
                              ],
                              "}"
                             }
                            ]
                           }
                          ],
                          "]"
                         }
                        ],
                        HoldForm
                       ]
                      },
                      {
                       TagBox[
                        RowBox[
                         {
                          "Table",
                          "[",
                          RowBox[
                           {
                            RowBox[{"RandomReal", "[", "]"}],
                            ",",
                            RowBox[
                             {
                              "{",
                              RowBox[
                               {
                                InterpretationBox[
                                 TagBox[
                                  TooltipBox[
                                   FrameBox[
                                    Cell[
                                     TextData[
                                      {
                                       StyleBox[
                                        "S1",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                         ]
                                       ],
                                       StyleBox[
                                        "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                         ]
                                       ],
                                       StyleBox[
                                        "Int",
                                        FontWeight -> "Plain",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                         ]
                                       ]
                                      }
                                     ],
                                     "Text"
                                    ],
                                    Background ->
                                     RGBColor[
                                      {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                     ],
                                    ContentPadding -> False,
                                    FrameMargins -> 2,
                                    RoundingRadius -> 2,
                                    StripOnInput -> False
                                   ],
                                   "\"TypedSymbol[CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                                  ],
                                  #1 &
                                 ],
                                 CodeEquivalence`Types`TypedSymbol[
                                  CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                                  Blank[Integer]
                                 ]
                                ],
                                ",",
                                "1",
                                ",",
                                "10",
                                ",",
                                "1"
                               }
                              ],
                              "}"
                             }
                            ]
                           }
                          ],
                          "]"
                         }
                        ],
                        HoldForm
                       ]
                      }
                     },
                     DefaultBaseStyle -> "Column",
                     GridBoxAlignment -> {"Columns" -> {{Left}}},
                     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                    ],
                    "Column"
                   ]
                  ],
                  "Output",
                  CellID -> 253809049
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               TextData[
                {
                 "The ",
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     ButtonBox["RandomReal", BaseStyle -> "Link"],
                     "[",
                     "1",
                     "]"
                    }
                   ]
                  ],
                  "InlineFormula"
                 ],
                 " does, which makes comparison fail:"
                }
               ],
               "MathCaption",
               CellID -> 745603685
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     RowBox[
                      {
                       "ToCanonicalForm",
                       "[",
                       RowBox[
                        {"expr2", ",", RowBox[{"\"Trace\"", "\[Rule]", "True"}]}
                       ],
                       "]"
                      }
                     ],
                     "//",
                     "Column"
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 256564854
                 ],
                 Cell[
                  BoxData[
                   TagBox[
                    GridBox[
                     {
                      {
                       TagBox[
                        RowBox[{"RandomReal", "[", RowBox[{"1", ",", "10"}], "]"}],
                        HoldForm
                       ]
                      },
                      {
                       TagBox[
                        RowBox[
                         {
                          "Table",
                          "[",
                          RowBox[{RowBox[{"RandomReal", "[", "1", "]"}], ",", "10"}],
                          "]"
                         }
                        ],
                        HoldForm
                       ]
                      },
                      {
                       TagBox[
                        RowBox[
                         {
                          "Table",
                          "[",
                          RowBox[
                           {
                            RowBox[{"RandomReal", "[", "1", "]"}],
                            ",",
                            RowBox[
                             {
                              "{",
                              RowBox[
                               {
                                InterpretationBox[
                                 StyleBox[
                                  "S",
                                  LineColor -> RGBColor[0.84395, 0.34671, 0.33092],
                                  FrontFaceColor -> RGBColor[0.84395, 0.34671, 0.33092],
                                  BackFaceColor -> RGBColor[0.84395, 0.34671, 0.33092],
                                  GraphicsColor -> RGBColor[0.84395, 0.34671, 0.33092],
                                  FontWeight -> Bold,
                                  FontSlant -> Italic,
                                  FontColor -> RGBColor[0.84395, 0.34671, 0.33092]
                                 ],
                                 CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1
                                ],
                                ",",
                                "1",
                                ",",
                                "10",
                                ",",
                                "1"
                               }
                              ],
                              "}"
                             }
                            ]
                           }
                          ],
                          "]"
                         }
                        ],
                        HoldForm
                       ]
                      },
                      {
                       TagBox[
                        RowBox[
                         {
                          "Table",
                          "[",
                          RowBox[
                           {
                            RowBox[{"RandomReal", "[", "1", "]"}],
                            ",",
                            RowBox[
                             {
                              "{",
                              RowBox[
                               {
                                InterpretationBox[
                                 TagBox[
                                  TooltipBox[
                                   FrameBox[
                                    Cell[
                                     TextData[
                                      {
                                       StyleBox[
                                        "S1",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                         ]
                                       ],
                                       StyleBox[
                                        "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                         ]
                                       ],
                                       StyleBox[
                                        "Int",
                                        FontWeight -> "Plain",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                         ]
                                       ]
                                      }
                                     ],
                                     "Text"
                                    ],
                                    Background ->
                                     RGBColor[
                                      {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                     ],
                                    ContentPadding -> False,
                                    FrameMargins -> 2,
                                    RoundingRadius -> 2,
                                    StripOnInput -> False
                                   ],
                                   "\"TypedSymbol[CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                                  ],
                                  #1 &
                                 ],
                                 CodeEquivalence`Types`TypedSymbol[
                                  CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                                  Blank[Integer]
                                 ]
                                ],
                                ",",
                                "1",
                                ",",
                                "10",
                                ",",
                                "1"
                               }
                              ],
                              "}"
                             }
                            ]
                           }
                          ],
                          "]"
                         }
                        ],
                        HoldForm
                       ]
                      },
                      {
                       TagBox[
                        RowBox[
                         {
                          "Table",
                          "[",
                          RowBox[
                           {
                            RowBox[
                             {
                              "RandomReal",
                              "[",
                              RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}],
                              "]"
                             }
                            ],
                            ",",
                            RowBox[
                             {
                              "{",
                              RowBox[
                               {
                                InterpretationBox[
                                 TagBox[
                                  TooltipBox[
                                   FrameBox[
                                    Cell[
                                     TextData[
                                      {
                                       StyleBox[
                                        "S1",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                         ]
                                       ],
                                       StyleBox[
                                        "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                         ]
                                       ],
                                       StyleBox[
                                        "Int",
                                        FontWeight -> "Plain",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                         ]
                                       ]
                                      }
                                     ],
                                     "Text"
                                    ],
                                    Background ->
                                     RGBColor[
                                      {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                     ],
                                    ContentPadding -> False,
                                    FrameMargins -> 2,
                                    RoundingRadius -> 2,
                                    StripOnInput -> False
                                   ],
                                   "\"TypedSymbol[CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                                  ],
                                  #1 &
                                 ],
                                 CodeEquivalence`Types`TypedSymbol[
                                  CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                                  Blank[Integer]
                                 ]
                                ],
                                ",",
                                "1",
                                ",",
                                "10",
                                ",",
                                "1"
                               }
                              ],
                              "}"
                             }
                            ]
                           }
                          ],
                          "]"
                         }
                        ],
                        HoldForm
                       ]
                      },
                      {
                       TagBox[
                        RowBox[
                         {
                          "Table",
                          "[",
                          RowBox[
                           {
                            RowBox[
                             {
                              "RandomValue",
                              "[",
                              RowBox[
                               {
                                "UniformDistribution",
                                "[",
                                RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}],
                                "]"
                               }
                              ],
                              "]"
                             }
                            ],
                            ",",
                            RowBox[
                             {
                              "{",
                              RowBox[
                               {
                                InterpretationBox[
                                 TagBox[
                                  TooltipBox[
                                   FrameBox[
                                    Cell[
                                     TextData[
                                      {
                                       StyleBox[
                                        "S1",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                         ]
                                       ],
                                       StyleBox[
                                        "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                        FontWeight -> "Bold",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                         ]
                                       ],
                                       StyleBox[
                                        "Int",
                                        FontWeight -> "Plain",
                                        FontColor ->
                                         RGBColor[
                                          {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                         ]
                                       ]
                                      }
                                     ],
                                     "Text"
                                    ],
                                    Background ->
                                     RGBColor[
                                      {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                     ],
                                    ContentPadding -> False,
                                    FrameMargins -> 2,
                                    RoundingRadius -> 2,
                                    StripOnInput -> False
                                   ],
                                   "\"TypedSymbol[CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                                  ],
                                  #1 &
                                 ],
                                 CodeEquivalence`Types`TypedSymbol[
                                  CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                                  Blank[Integer]
                                 ]
                                ],
                                ",",
                                "1",
                                ",",
                                "10",
                                ",",
                                "1"
                               }
                              ],
                              "}"
                             }
                            ]
                           }
                          ],
                          "]"
                         }
                        ],
                        HoldForm
                       ]
                      }
                     },
                     DefaultBaseStyle -> "Column",
                     GridBoxAlignment -> {"Columns" -> {{Left}}},
                     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                    ],
                    "Column"
                   ]
                  ],
                  "Output",
                  CellID -> 314063631
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            TextData[
             {
              "Notice that the only difference between expr1 and the second transformation of expr2 is that one has ",
              Cell[
               BoxData[
                RowBox[
                 {
                  ButtonBox["RandomReal", BaseStyle -> "Link"],
                  "[",
                  "1",
                  "]"
                 }
                ]
               ],
               "InlineFormula"
              ],
              " instead of ",
              Cell[
               BoxData[
                RowBox[
                 {ButtonBox["RandomReal", BaseStyle -> "Link"], "[", "]"}
                ]
               ],
               "InlineFormula"
              ],
              ". Since ",
              Cell[
               BoxData[
                RowBox[
                 {ButtonBox["RandomReal", BaseStyle -> "Link"], "[", "]"}
                ]
               ],
               "InlineFormula"
              ],
              " is equivalent to ",
              Cell[
               BoxData[
                RowBox[
                 {
                  ButtonBox["RandomReal", BaseStyle -> "Link"],
                  "[",
                  "1",
                  "]"
                 }
                ]
               ],
               "InlineFormula"
              ],
              ", this might be a good idea to use as a rule."
             }
            ],
            "Text",
            CellID -> 448699885
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Adding new rules temporarily",
         "Section",
         CellID -> 306218
        ],
        Cell[
         BoxData[
          GridBox[
           {
            {
             ButtonBox[
              "$TransformationRules",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/$TransformationRules"
             ],
             Cell[
              "the set of transformation rules used to convert expressions to their canonical forms",
              "TableText"
             ]
            },
            {
             ButtonBox[
              "BuildDispatch",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/BuildDispatch"
             ],
             Cell[
              TextData[
               {
                "builds a ",
                Cell[
                 BoxData[ButtonBox["Dispatch", BaseStyle -> "Link"]],
                 "InlineFormula"
                ],
                " used to convert expressions from ",
                Cell[
                 BoxData[
                  ButtonBox[
                   "$TransformationRules",
                   BaseStyle -> "Link",
                   ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/$TransformationRules"
                  ]
                 ],
                 "InlineFormula"
                ]
               }
              ],
              "TableText"
             ]
            }
           }
          ]
         ],
         "DefinitionBox",
         CellID -> 21254250
        ],
        Cell[
         "Tools for building new conversion rules.",
         "Caption",
         CellID -> 332678624
        ],
        Cell[
         TextData[
          {
           "The symbol ",
           Cell[
            BoxData[
             ButtonBox[
              "$TransformationRules",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/$TransformationRules"
             ]
            ],
            "InlineFormula"
           ],
           " (defined in Kernel/CanonicalForms/Rules.m) contains the rules used by ",
           Cell[
            BoxData[
             ButtonBox[
              "ToCanonicalForm",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/ToCanonicalForm"
             ]
            ],
            "InlineFormula"
           ],
           ". For testing, we can modify the rules in the current session without reloading the package by using ",
           Cell[
            BoxData[
             ButtonBox[
              "BuildDispatch",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/BuildDispatch"
             ]
            ],
            "InlineFormula"
           ],
           "."
          }
         ],
         "Text",
         CellID -> 61699982
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "Here's the desired rule from the previous example:",
            "MathCaption",
            CellID -> 339552293
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "newRule",
                 "=",
                 RowBox[
                  {
                   RowBox[
                    {"HoldPattern", "[", RowBox[{"RandomReal", "[", "]"}], "]"}
                   ],
                   "\[RuleDelayed]",
                   RowBox[{"RandomReal", "[", "1", "]"}]
                  }
                 ]
                }
               ],
               ";"
              }
             ]
            ],
            "Input",
            CellID -> 267314732
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "Create a new set of rules that includes this one:",
            "MathCaption",
            CellID -> 87137739
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "newTransformationRules",
                 "=",
                 RowBox[
                  {
                   "Append",
                   "[",
                   RowBox[{"$TransformationRules", ",", "newRule"}],
                   "]"
                  }
                 ]
                }
               ],
               ";"
              }
             ]
            ],
            "Input",
            CellID -> 194997207
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {"BuildDispatch", "[", "newTransformationRules", "]"}
                ]
               ],
               "Input",
               CellID -> 484565980
              ],
              Cell[
               BoxData[
                "\"Rebuilt transformation rules\\n----------------------------\\nCount:   138\\nAdded:   1\\nRemoved: 0\\n----------------------------\""
               ],
               "Print",
               CellID -> 93470259
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "Now we can verify that expr1 reaches the desired canonical form:",
            "MathCaption",
            CellID -> 891163659
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  RowBox[{"ToCanonicalForm", "[", "expr1", "]"}],
                  "===",
                  RowBox[{"ToCanonicalForm", "[", "expr2", "]"}]
                 }
                ]
               ],
               "Input",
               CellID -> 74093971
              ],
              Cell[BoxData["True"], "Output", CellID -> 10762895]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  RowBox[
                   {
                    "ToCanonicalForm",
                    "[",
                    RowBox[
                     {"expr1", ",", RowBox[{"\"Trace\"", "\[Rule]", "True"}]}
                    ],
                    "]"
                   }
                  ],
                  "//",
                  "Column"
                 }
                ]
               ],
               "Input",
               CellID -> 52233642
              ],
              Cell[
               BoxData[
                TagBox[
                 GridBox[
                  {
                   {
                    TagBox[
                     RowBox[
                      {
                       "Table",
                       "[",
                       RowBox[{RowBox[{"RandomReal", "[", "]"}], ",", "10"}],
                       "]"
                      }
                     ],
                     HoldForm
                    ]
                   },
                   {
                    TagBox[
                     RowBox[
                      {
                       "Table",
                       "[",
                       RowBox[
                        {
                         RowBox[{"RandomReal", "[", "]"}],
                         ",",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             InterpretationBox[
                              StyleBox[
                               "S",
                               LineColor -> RGBColor[0.84395, 0.34671, 0.33092],
                               FrontFaceColor -> RGBColor[0.84395, 0.34671, 0.33092],
                               BackFaceColor -> RGBColor[0.84395, 0.34671, 0.33092],
                               GraphicsColor -> RGBColor[0.84395, 0.34671, 0.33092],
                               FontWeight -> Bold,
                               FontSlant -> Italic,
                               FontColor -> RGBColor[0.84395, 0.34671, 0.33092]
                              ],
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1
                             ],
                             ",",
                             "1",
                             ",",
                             "10",
                             ",",
                             "1"
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ],
                       "]"
                      }
                     ],
                     HoldForm
                    ]
                   },
                   {
                    TagBox[
                     RowBox[
                      {
                       "Table",
                       "[",
                       RowBox[
                        {
                         RowBox[{"RandomReal", "[", "]"}],
                         ",",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             InterpretationBox[
                              TagBox[
                               TooltipBox[
                                FrameBox[
                                 Cell[
                                  TextData[
                                   {
                                    StyleBox[
                                     "S1",
                                     FontWeight -> "Bold",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                      ]
                                    ],
                                    StyleBox[
                                     "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                     FontWeight -> "Bold",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                      ]
                                    ],
                                    StyleBox[
                                     "Int",
                                     FontWeight -> "Plain",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                      ]
                                    ]
                                   }
                                  ],
                                  "Text"
                                 ],
                                 Background ->
                                  RGBColor[
                                   {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                  ],
                                 ContentPadding -> False,
                                 FrameMargins -> 2,
                                 RoundingRadius -> 2,
                                 StripOnInput -> False
                                ],
                                "\"TypedSymbol[CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                               ],
                               #1 &
                              ],
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ]
                             ],
                             ",",
                             "1",
                             ",",
                             "10",
                             ",",
                             "1"
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ],
                       "]"
                      }
                     ],
                     HoldForm
                    ]
                   },
                   {
                    TagBox[
                     RowBox[
                      {
                       "Table",
                       "[",
                       RowBox[
                        {
                         RowBox[{"RandomReal", "[", "1", "]"}],
                         ",",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             InterpretationBox[
                              TagBox[
                               TooltipBox[
                                FrameBox[
                                 Cell[
                                  TextData[
                                   {
                                    StyleBox[
                                     "S1",
                                     FontWeight -> "Bold",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                      ]
                                    ],
                                    StyleBox[
                                     "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                     FontWeight -> "Bold",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                      ]
                                    ],
                                    StyleBox[
                                     "Int",
                                     FontWeight -> "Plain",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                      ]
                                    ]
                                   }
                                  ],
                                  "Text"
                                 ],
                                 Background ->
                                  RGBColor[
                                   {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                  ],
                                 ContentPadding -> False,
                                 FrameMargins -> 2,
                                 RoundingRadius -> 2,
                                 StripOnInput -> False
                                ],
                                "\"TypedSymbol[CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                               ],
                               #1 &
                              ],
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ]
                             ],
                             ",",
                             "1",
                             ",",
                             "10",
                             ",",
                             "1"
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ],
                       "]"
                      }
                     ],
                     HoldForm
                    ]
                   },
                   {
                    TagBox[
                     RowBox[
                      {
                       "Table",
                       "[",
                       RowBox[
                        {
                         RowBox[
                          {
                           "RandomReal",
                           "[",
                           RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}],
                           "]"
                          }
                         ],
                         ",",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             InterpretationBox[
                              TagBox[
                               TooltipBox[
                                FrameBox[
                                 Cell[
                                  TextData[
                                   {
                                    StyleBox[
                                     "S1",
                                     FontWeight -> "Bold",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                      ]
                                    ],
                                    StyleBox[
                                     "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                     FontWeight -> "Bold",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                      ]
                                    ],
                                    StyleBox[
                                     "Int",
                                     FontWeight -> "Plain",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                      ]
                                    ]
                                   }
                                  ],
                                  "Text"
                                 ],
                                 Background ->
                                  RGBColor[
                                   {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                  ],
                                 ContentPadding -> False,
                                 FrameMargins -> 2,
                                 RoundingRadius -> 2,
                                 StripOnInput -> False
                                ],
                                "\"TypedSymbol[CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                               ],
                               #1 &
                              ],
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ]
                             ],
                             ",",
                             "1",
                             ",",
                             "10",
                             ",",
                             "1"
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ],
                       "]"
                      }
                     ],
                     HoldForm
                    ]
                   },
                   {
                    TagBox[
                     RowBox[
                      {
                       "Table",
                       "[",
                       RowBox[
                        {
                         RowBox[
                          {
                           "RandomValue",
                           "[",
                           RowBox[
                            {
                             "UniformDistribution",
                             "[",
                             RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}],
                             "]"
                            }
                           ],
                           "]"
                          }
                         ],
                         ",",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             InterpretationBox[
                              TagBox[
                               TooltipBox[
                                FrameBox[
                                 Cell[
                                  TextData[
                                   {
                                    StyleBox[
                                     "S1",
                                     FontWeight -> "Bold",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[47, 255], Rational[13, 51], Rational[6, 17]}
                                      ]
                                    ],
                                    StyleBox[
                                     "\[ThinSpace]\[Proportion]\[ThinSpace]",
                                     FontWeight -> "Bold",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[94, 255], Rational[43, 85], Rational[181, 255]}
                                      ]
                                    ],
                                    StyleBox[
                                     "Int",
                                     FontWeight -> "Plain",
                                     FontColor ->
                                      RGBColor[
                                       {Rational[14, 51], Rational[97, 255], Rational[8, 15]}
                                      ]
                                    ]
                                   }
                                  ],
                                  "Text"
                                 ],
                                 Background ->
                                  RGBColor[
                                   {Rational[58, 85], Rational[64, 85], Rational[218, 255]}
                                  ],
                                 ContentPadding -> False,
                                 FrameMargins -> 2,
                                 RoundingRadius -> 2,
                                 StripOnInput -> False
                                ],
                                "\"TypedSymbol[CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1, _Integer]\""
                               ],
                               #1 &
                              ],
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ]
                             ],
                             ",",
                             "1",
                             ",",
                             "10",
                             ",",
                             "1"
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ],
                       "]"
                      }
                     ],
                     HoldForm
                    ]
                   }
                  },
                  DefaultBaseStyle -> "Column",
                  GridBoxAlignment -> {"Columns" -> {{Left}}},
                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                 ],
                 "Column"
                ]
               ],
               "Output",
               CellID -> 735165224
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell["Testing new rules", "Section", CellID -> 188609687],
        Cell[
         CellGroupData[
          {
           Cell[
            "Run the included unit tests to make sure that adding the new rule doesn't interfere with anything else:",
            "MathCaption",
            CellID -> 531296000
           ],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 "testFile",
                 "=",
                 "\[IndentingNewLine]",
                 RowBox[
                  {
                   "FileNameJoin",
                   "[",
                   RowBox[
                    {
                     "{",
                     "\[IndentingNewLine]",
                     RowBox[
                      {
                       RowBox[
                        {
                         "Lookup",
                         "[",
                         RowBox[
                          {
                           RowBox[
                            {"PacletInformation", "[", "\"CodeEquivalence\"", "]"}
                           ],
                           ",",
                           "\"Location\""
                          }
                         ],
                         "]"
                        }
                       ],
                       ",",
                       "\[IndentingNewLine]",
                       "\"Tests\"",
                       ",",
                       "\[IndentingNewLine]",
                       "\"CanonicalForms\"",
                       ",",
                       "\[IndentingNewLine]",
                       "\"Rules.wlt\""
                      }
                     ],
                     "\[IndentingNewLine]",
                     "}"
                    }
                   ],
                   "]"
                  }
                 ]
                }
               ],
               ";"
              }
             ]
            ],
            "Input",
            CellID -> 70849682
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "results",
                  "=",
                  RowBox[
                   {
                    "Block",
                    "[",
                    RowBox[
                     {
                      RowBox[
                       {
                        "{",
                        RowBox[
                         {
                          "CodeEquivalence`EvaluationControl`$Memoize",
                          "=",
                          "False"
                         }
                        ],
                        " ",
                        RowBox[
                         {
                          "(*",
                          " ",
                          RowBox[
                           {
                            "to",
                            " ",
                            "avoid",
                            " ",
                            "using",
                            " ",
                            "any",
                            " ",
                            "cached",
                            " ",
                            "results"
                           }
                          ],
                          " ",
                          "*)"
                         }
                        ],
                        "}"
                       }
                      ],
                      ",",
                      "\[IndentingNewLine]",
                      RowBox[
                       {
                        "TestReport",
                        "[",
                        RowBox[
                         {
                          "testFile",
                          ",",
                          RowBox[{"TimeConstraint", "\[Rule]", "1"}]
                         }
                        ],
                        "]"
                       }
                      ]
                     }
                    ],
                    "\[IndentingNewLine]",
                    "]"
                   }
                  ]
                 }
                ]
               ],
               "Input",
               CellID -> 585677533
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["TestReportObject", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False},
                    PanelBox[
                     PaneSelectorBox[
                      {
                       False ->
                        GridBox[
                         {
                          {
                           PaneBox[
                            ButtonBox[
                             DynamicBox[
                              FEPrivate`FrontEndResource[
                               "FEBitmaps",
                               "SquarePlusIconMedium"
                              ],
                              ImageSizeCache -> {12.0, {0.0, 12.0}}
                             ],
                             Appearance -> None,
                             ButtonFunction :> (Typeset`open$$ = True),
                             Evaluator -> Automatic,
                             Method -> "Preemptive"
                            ],
                            Alignment -> {Center, Center},
                            ImageSize ->
                             Dynamic[
                              {
                               Automatic,
                               Times[
                                3.5,
                                Times[
                                 CurrentValue["FontCapHeight"],
                                 AbsoluteCurrentValue[Magnification]^(-1)
                                ]
                               ]
                              }
                             ]
                           ],
                           GraphicsBox[
                            InsetBox[
                             PaneBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource[
                                "MUnitExpressions",
                                "SuccessIcon"
                               ],
                               ImageSizeCache -> {16.0, {4.0, 8.0}}
                              ],
                              Alignment -> Center,
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ]
                            ],
                            AspectRatio -> 1,
                            Axes -> False,
                            Background -> GrayLevel[0.93],
                            Frame -> True,
                            FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.55]],
                            FrameTicks -> None,
                            ImageSize -> {
                             Automatic,
                             Dynamic[
                              Times[
                               3.5,
                               Times[
                                CurrentValue["FontCapHeight"],
                                AbsoluteCurrentValue[Magnification]^(-1)
                               ]
                              ]
                             ]
                            },
                            PlotRange -> {{0, 1}, {0, 1}}
                           ],
                           GridBox[
                            {
                             {
                              RowBox[
                               {
                                TagBox["\"Title: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"Test Report: Rules.wlt\"", "SummaryItem"]
                               }
                              ],
                              "\[SpanFromLeft]"
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Success rate: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 TemplateBox[{"100", "\"%\""}, "RowDefault"],
                                 "SummaryItem"
                                ]
                               }
                              ],
                              RowBox[
                               {
                                TagBox["\"Tests run: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["32", "SummaryItem"]
                               }
                              ]
                             }
                            },
                            AutoDelete -> False,
                            BaseStyle -> {
                             ShowStringCharacters -> False,
                             NumberMarks -> False,
                             PrintPrecision -> 3,
                             ShowSyntaxStyles -> False
                            },
                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                           ]
                          }
                         },
                         AutoDelete -> False,
                         BaselinePosition -> {1, 1},
                         GridBoxAlignment -> {"Rows" -> {{Top}}},
                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                        ],
                       True ->
                        GridBox[
                         {
                          {
                           PaneBox[
                            ButtonBox[
                             DynamicBox[
                              FEPrivate`FrontEndResource[
                               "FEBitmaps",
                               "SquareMinusIconMedium"
                              ]
                             ],
                             Appearance -> None,
                             ButtonFunction :> (Typeset`open$$ = False),
                             Evaluator -> Automatic,
                             Method -> "Preemptive"
                            ],
                            Alignment -> {Center, Center},
                            ImageSize ->
                             Dynamic[
                              {
                               Automatic,
                               Times[
                                3.5,
                                Times[
                                 CurrentValue["FontCapHeight"],
                                 AbsoluteCurrentValue[Magnification]^(-1)
                                ]
                               ]
                              }
                             ]
                           ],
                           GraphicsBox[
                            InsetBox[
                             PaneBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource[
                                "MUnitExpressions",
                                "SuccessIcon"
                               ]
                              ],
                              Alignment -> Center,
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ]
                            ],
                            AspectRatio -> 1,
                            Axes -> False,
                            Background -> GrayLevel[0.93],
                            Frame -> True,
                            FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.55]],
                            FrameTicks -> None,
                            ImageSize -> {
                             Automatic,
                             Dynamic[
                              Times[
                               3.5,
                               Times[
                                CurrentValue["FontCapHeight"],
                                AbsoluteCurrentValue[Magnification]^(-1)
                               ]
                              ]
                             ]
                            },
                            PlotRange -> {{0, 1}, {0, 1}}
                           ],
                           GridBox[
                            {
                             {
                              RowBox[
                               {
                                TagBox["\"Title: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"Test Report: Rules.wlt\"", "SummaryItem"]
                               }
                              ],
                              "\[SpanFromLeft]"
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Success rate: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 TemplateBox[{"100", "\"%\""}, "RowDefault"],
                                 "SummaryItem"
                                ]
                               }
                              ],
                              RowBox[
                               {
                                TagBox["\"Tests run: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["32", "SummaryItem"]
                               }
                              ]
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Succeeded: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["32", "SummaryItem"]
                               }
                              ],
                              "\[SpanFromLeft]"
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Failed: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["0", "SummaryItem"]
                               }
                              ],
                              "\[SpanFromLeft]"
                             },
                             {
                              RowBox[
                               {
                                TagBox[
                                 "\"Failed with wrong results: \"",
                                 "SummaryItemAnnotation"
                                ],
                                "\[InvisibleSpace]",
                                TagBox["0", "SummaryItem"]
                               }
                              ],
                              "\[SpanFromLeft]"
                             },
                             {
                              RowBox[
                               {
                                TagBox[
                                 "\"Failed with messages: \"",
                                 "SummaryItemAnnotation"
                                ],
                                "\[InvisibleSpace]",
                                TagBox["0", "SummaryItem"]
                               }
                              ],
                              "\[SpanFromLeft]"
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["0", "SummaryItem"]
                               }
                              ],
                              "\[SpanFromLeft]"
                             }
                            },
                            AutoDelete -> False,
                            BaseStyle -> {
                             ShowStringCharacters -> False,
                             NumberMarks -> False,
                             PrintPrecision -> 3,
                             ShowSyntaxStyles -> False
                            },
                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                           ]
                          }
                         },
                         AutoDelete -> False,
                         BaselinePosition -> {1, 1},
                         GridBoxAlignment -> {"Rows" -> {{Top}}},
                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                        ]
                      },
                      Dynamic[Typeset`open$$],
                      ImageSize -> Automatic
                     ],
                     BaselinePosition -> Baseline
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 TestReportObject[
                  <|
                   "Title" -> "Test Report: Rules.wlt",
                   "TimeElapsed" -> Quantity[1.14, "Seconds"],
                   "TestsSucceededCount" -> 32,
                   "TestsFailedCount" -> 0,
                   "TestsFailedWrongResultsCount" -> 0,
                   "TestsFailedWithMessagesCount" -> 0,
                   "TestsFailedWithErrorsCount" -> 0,
                   "Aborted" -> False,
                   "TestResults" -> <|
                    1 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 1,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         SameQ[
                          Replace[
                           CodeEquivalence`ToCanonicalForm[
                            HoldComplete[Reverse[RandomColor[100]]]
                           ],
                           HoldComplete[Pattern[e, Blank[]]] :>
                            CodeEquivalence`EvaluationControl`EvaluateSafely[
                             e,
                             "SymbolList" ->
                              Join[
                               CodeEquivalence`EvaluationControl`$UnsafeSymbols,
                               CodeEquivalence`EvaluationControl`$RandomSymbols
                              ]
                            ]
                          ],
                          Replace[
                           CodeEquivalence`ToCanonicalForm[
                            HoldComplete[Table[RandomColor[], 100]]
                           ],
                           HoldComplete[Pattern[e, Blank[]]] :>
                            CodeEquivalence`EvaluationControl`EvaluateSafely[
                             e,
                             "SymbolList" ->
                              Join[
                               CodeEquivalence`EvaluationControl`$UnsafeSymbols,
                               CodeEquivalence`EvaluationControl`$RandomSymbols
                              ]
                            ]
                          ]
                         ]
                        ],
                       "ExpectedOutput" -> HoldForm[True],
                       "ActualOutput" -> HoldForm[True],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.037548, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.031, "Seconds"],
                       "MemoryUsed" -> Quantity[694168, "Bytes"]
                      |>
                     ],
                    2 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 2,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Table[n + Range[n], {n, 10}]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Table[
                            Plus[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                              Blank[Integer]
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                              Blank[Integer]
                             ],
                             1
                            }
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Table[
                            Plus[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                              Blank[Integer]
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                              Blank[Integer]
                             ],
                             1
                            }
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.029521, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.031, "Seconds"],
                       "MemoryUsed" -> Quantity[130632, "Bytes"]
                      |>
                     ],
                    3 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 3,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         SameQ[
                          Apply[
                           CodeEquivalence`EvaluationControl`EvaluateSafely,
                           CodeEquivalence`ToCanonicalForm[
                            HoldComplete[Table[n + Range[n], {n, 10}]]
                           ]
                          ],
                          Table[n + Range[n], {n, 10}],
                          Apply[
                           CodeEquivalence`EvaluationControl`EvaluateSafely,
                           CodeEquivalence`ToCanonicalForm[
                            HoldComplete[Table[(n + 1) + Range[n + 1], {n, 0, 9}]]
                           ]
                          ],
                          Table[(n + 1) + Range[n + 1], {n, 0, 9}]
                         ]
                        ],
                       "ExpectedOutput" -> HoldForm[True],
                       "ActualOutput" -> HoldForm[True],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.083157, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.078, "Seconds"],
                       "MemoryUsed" -> Quantity[200648, "Bytes"]
                      |>
                     ],
                    4 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 4,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Table[Range[2^3 + 2]^(n + 1), {n, 3}]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             Plus[
                              1,
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                               Blank[Integer]
                              ]
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             10,
                             1
                            }
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                             Blank[Integer]
                            ],
                            1,
                            3,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             Plus[
                              1,
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                               Blank[Integer]
                              ]
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             10,
                             1
                            }
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                             Blank[Integer]
                            ],
                            1,
                            3,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.039048, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.047, "Seconds"],
                       "MemoryUsed" -> Quantity[117680, "Bytes"]
                      |>
                     ],
                    5 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 5,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         SameQ[
                          Apply[
                           CodeEquivalence`EvaluationControl`EvaluateSafely,
                           CodeEquivalence`ToCanonicalForm[
                            HoldComplete[Table[Range[2^3 + 2]^(n + 1), {n, 3}]]
                           ]
                          ],
                          Table[Range[2^3 + 2]^(n + 1), {n, 3}],
                          Apply[
                           CodeEquivalence`EvaluationControl`EvaluateSafely,
                           CodeEquivalence`ToCanonicalForm[
                            HoldComplete[Table[n^p, {p, 2, 4}, {n, 10}]]
                           ]
                          ],
                          Table[n^p, {p, 2, 4}, {n, 10}]
                         ]
                        ],
                       "ExpectedOutput" -> HoldForm[True],
                       "ActualOutput" -> HoldForm[True],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.062579, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.063, "Seconds"],
                       "MemoryUsed" -> Quantity[178232, "Bytes"]
                      |>
                     ],
                    6 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 6,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[
                           Table[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}^(n + 1), {n, 3}]
                          ]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             Plus[
                              1,
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                               Blank[Integer]
                              ]
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             10,
                             1
                            }
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                             Blank[Integer]
                            ],
                            1,
                            3,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             Plus[
                              1,
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                               Blank[Integer]
                              ]
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             10,
                             1
                            }
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S2,
                             Blank[Integer]
                            ],
                            1,
                            3,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.022037, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.031, "Seconds"],
                       "MemoryUsed" -> Quantity[59248, "Bytes"]
                      |>
                     ],
                    7 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 7,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         SameQ[
                          Apply[
                           CodeEquivalence`EvaluationControl`EvaluateSafely,
                           CodeEquivalence`ToCanonicalForm[
                            HoldComplete[
                             Table[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}^(n + 1), {n, 3}]
                            ]
                           ]
                          ],
                          Table[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}^(n + 1), {n, 3}],
                          Apply[
                           CodeEquivalence`EvaluationControl`EvaluateSafely,
                           CodeEquivalence`ToCanonicalForm[
                            HoldComplete[Table[n^p, {p, 2, 4}, {n, 10}]]
                           ]
                          ],
                          Table[n^p, {p, 2, 4}, {n, 10}]
                         ]
                        ],
                       "ExpectedOutput" -> HoldForm[True],
                       "ActualOutput" -> HoldForm[True],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.045603, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.047, "Seconds"],
                       "MemoryUsed" -> Quantity[119864, "Bytes"]
                      |>
                     ],
                    8 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 8,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[
                           Reverse[Map[RandomInteger, Reverse[Range[5]]]]
                          ]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           CodeEquivalence`CanonicalForms`Common`RandomValue[
                            DiscreteUniformDistribution[
                             {
                              0,
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ]
                             }
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            5,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           CodeEquivalence`CanonicalForms`Common`RandomValue[
                            DiscreteUniformDistribution[
                             {
                              0,
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ]
                             }
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            5,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.026018, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.031, "Seconds"],
                       "MemoryUsed" -> Quantity[112416, "Bytes"]
                      |>
                     ],
                    9 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 9,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Part[Reverse[IntegerDigits[4294967296]], 2]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[HoldComplete[Part[IntegerDigits[4294967296], -2]]],
                       "ActualOutput" ->
                        HoldForm[HoldComplete[Part[IntegerDigits[4294967296], -2]]],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0015033, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[712, "Bytes"]
                      |>
                     ],
                    10 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 10,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Range[10]^3 - Range[10]^2]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            Times[
                             -1,
                             Power[
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ],
                              2
                             ]
                            ],
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             3
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            Times[
                             -1,
                             Power[
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ],
                              2
                             ]
                            ],
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             3
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.019573, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.016, "Seconds"],
                       "MemoryUsed" -> Quantity[46984, "Bytes"]
                      |>
                     ],
                    11 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 11,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[CodeEquivalence`ToCanonicalForm[Style["A", 100]]],
                       "ExpectedOutput" -> HoldForm[Style["A", FontSize -> 100]],
                       "ActualOutput" -> HoldForm[Style["A", FontSize -> 100]],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.001001, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[624, "Bytes"]
                      |>
                     ],
                    12 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 12,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`CodeEquivalentQ[
                          #1 + 2 &,
                          Function[n, n + 2]
                         ]
                        ],
                       "ExpectedOutput" -> HoldForm[True],
                       "ActualOutput" -> HoldForm[True],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0030036, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[112, "Bytes"]
                      |>
                     ],
                    13 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 13,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`CodeEquivalentQ[2*(x + 1), 2*x + 2]
                        ],
                       "ExpectedOutput" -> HoldForm[True],
                       "ActualOutput" -> HoldForm[True],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0060071, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.015, "Seconds"],
                       "MemoryUsed" -> Quantity[3128, "Bytes"]
                      |>
                     ],
                    14 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 14,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`CodeEquivalentQ[2*(#1 + 1) & , 2*#1 + 2 & ]
                        ],
                       "ExpectedOutput" -> HoldForm[True],
                       "ActualOutput" -> HoldForm[True],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0050089, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[112, "Bytes"]
                      |>
                     ],
                    15 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 15,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`CodeEquivalentQ[
                          Grid[RandomColor[{10, 10}]],
                          Grid[Array[RandomColor[] & , {10, 10}]]
                         ]
                        ],
                       "ExpectedOutput" -> HoldForm[True],
                       "ActualOutput" -> HoldForm[True],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.066118, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.063, "Seconds"],
                       "MemoryUsed" -> Quantity[158016, "Bytes"]
                      |>
                     ],
                    16 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 16,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         Not[
                          CodeEquivalence`CodeEquivalentQ[
                           f[Pattern[x, Blank[]]] := x^2,
                           f[Pattern[x, Blank[]]] := x^3
                          ]
                         ]
                        ],
                       "ExpectedOutput" -> HoldForm[True],
                       "ActualOutput" -> HoldForm[True],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.013999, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[21608, "Bytes"]
                      |>
                     ],
                    17 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 17,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[HoldComplete[Range[4]]]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           CodeEquivalence`Types`TypedSymbol[
                            CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                            Blank[Integer]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            4,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           CodeEquivalence`Types`TypedSymbol[
                            CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                            Blank[Integer]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            4,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0050067, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.016, "Seconds"],
                       "MemoryUsed" -> Quantity[6488, "Bytes"]
                      |>
                     ],
                    18 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 18,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Reverse[Reverse[Range[4]]]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           CodeEquivalence`Types`TypedSymbol[
                            CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                            Blank[Integer]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            4,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           CodeEquivalence`Types`TypedSymbol[
                            CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                            Blank[Integer]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            4,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0050061, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[6472, "Bytes"]
                      |>
                     ],
                    19 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 19,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[ListPlot[Range[10, 14]]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          ListPlot[
                           Table[
                            Plus[
                             9,
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             5,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          ListPlot[
                           Table[
                            Plus[
                             9,
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             5,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0095264, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[18928, "Bytes"]
                      |>
                     ],
                    20 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 20,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Column[{1, 2, 3, 4, 5}]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Column[
                           Table[
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             5,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Column[
                           Table[
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             5,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0045206, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[6920, "Bytes"]
                      |>
                     ],
                    21 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 21,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[NumberLinePlot[Range[5]^2]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          NumberLinePlot[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             2
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             5,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          NumberLinePlot[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             2
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             5,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0065094, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[9712, "Bytes"]
                      |>
                     ],
                    22 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 22,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Range[11] + 9]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            9,
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            11,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            9,
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            11,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.008024, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[15808, "Bytes"]
                      |>
                     ],
                    23 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 23,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Range[0, 10] + 10]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            9,
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            11,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            9,
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            11,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.016536, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.016, "Seconds"],
                       "MemoryUsed" -> Quantity[34256, "Bytes"]
                      |>
                     ],
                    24 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 24,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[HoldComplete[Range[10]*3]]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Times[
                            3,
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Times[
                            3,
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0064944, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.015, "Seconds"],
                       "MemoryUsed" -> Quantity[6544, "Bytes"]
                      |>
                     ],
                    25 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 25,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Table[n, {n, 2, 20, 2}]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            1,
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            19,
                            2
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            1,
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            19,
                            2
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0075074, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.016, "Seconds"],
                       "MemoryUsed" -> Quantity[18896, "Bytes"]
                      |>
                     ],
                    26 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 26,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[BarChart[Range[10]^2]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          BarChart[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             2
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             10,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          BarChart[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             2
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             10,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0070072, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.016, "Seconds"],
                       "MemoryUsed" -> Quantity[9728, "Bytes"]
                      |>
                     ],
                    27 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 27,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[IntegerDigits[Range[10]^2]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           IntegerDigits[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             2
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           IntegerDigits[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             2
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0075238, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[9848, "Bytes"]
                      |>
                     ],
                    28 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 28,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Range[10]^3 - Range[10]^2]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            Times[
                             -1,
                             Power[
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ],
                              2
                             ]
                            ],
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             3
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Plus[
                            Times[
                             -1,
                             Power[
                              CodeEquivalence`Types`TypedSymbol[
                               CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                               Blank[Integer]
                              ],
                              2
                             ]
                            ],
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             3
                            ]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            10,
                            1
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.019525, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.016, "Seconds"],
                       "MemoryUsed" -> Quantity[46984, "Bytes"]
                      |>
                     ],
                    29 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 29,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Table[n, {n, 1, 100, 2}]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           CodeEquivalence`Types`TypedSymbol[
                            CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                            Blank[Integer]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            100,
                            2
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           CodeEquivalence`Types`TypedSymbol[
                            CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                            Blank[Integer]
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            100,
                            2
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0050043, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[9680, "Bytes"]
                      |>
                     ],
                    30 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 30,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[Table[n^2, {n, 2, 100, 2}]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Power[
                            Plus[
                             1,
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ]
                            ],
                            2
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            99,
                            2
                           }
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          Table[
                           Power[
                            Plus[
                             1,
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ]
                            ],
                            2
                           ],
                           {
                            CodeEquivalence`Types`TypedSymbol[
                             CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                             Blank[Integer]
                            ],
                            1,
                            99,
                            2
                           }
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0095123, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.0, "Seconds"],
                       "MemoryUsed" -> Quantity[25152, "Bytes"]
                      |>
                     ],
                    31 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 31,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[NumberLinePlot[1/Range[20]]]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          NumberLinePlot[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             -1
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             20,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          NumberLinePlot[
                           Table[
                            Power[
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             -1
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             20,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.011014, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.015, "Seconds"],
                       "MemoryUsed" -> Quantity[18944, "Bytes"]
                      |>
                     ],
                    32 ->
                     TestResultObject[
                      <|
                       "TestIndex" -> 32,
                       "TestID" -> None,
                       "Outcome" -> "Success",
                       "Input" ->
                        HoldForm[
                         CodeEquivalence`ToCanonicalForm[
                          HoldComplete[
                           ListLinePlot[Table[RandomInteger[{0, n}], {n, 100}]]
                          ]
                         ]
                        ],
                       "ExpectedOutput" ->
                        HoldForm[
                         HoldComplete[
                          ListLinePlot[
                           Table[
                            CodeEquivalence`CanonicalForms`Common`RandomValue[
                             DiscreteUniformDistribution[
                              {
                               0,
                               CodeEquivalence`Types`TypedSymbol[
                                CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                                Blank[Integer]
                               ]
                              }
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             100,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ActualOutput" ->
                        HoldForm[
                         HoldComplete[
                          ListLinePlot[
                           Table[
                            CodeEquivalence`CanonicalForms`Common`RandomValue[
                             DiscreteUniformDistribution[
                              {
                               0,
                               CodeEquivalence`Types`TypedSymbol[
                                CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                                Blank[Integer]
                               ]
                              }
                             ]
                            ],
                            {
                             CodeEquivalence`Types`TypedSymbol[
                              CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                              Blank[Integer]
                             ],
                             1,
                             100,
                             1
                            }
                           ]
                          ]
                         ]
                        ],
                       "ExpectedMessages" -> { },
                       "ActualMessages" -> { },
                       "AbsoluteTimeUsed" -> Quantity[0.0070051, "Seconds"],
                       "CPUTimeUsed" -> Quantity[0.016, "Seconds"],
                       "MemoryUsed" -> Quantity[9840, "Bytes"]
                      |>
                     ]
                   |>,
                   "TestsSucceededIndices" -> {
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32
                   },
                   "TestsFailedIndices" -> { },
                   "TestsFailedWrongResultsIndices" -> { },
                   "TestsFailedWithMessagesIndices" -> { },
                   "TestsFailedWithErrorsIndices" -> { }
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellID -> 39319692
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Adding new rules permanently",
         "Section",
         CellID -> 134428044
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "Current method (soon to be obsolete)",
            "Subsection",
            CellID -> 108002863
           ],
           Cell[
            TextData[
             {
              "Once a new rule has been successfully tested, it should be added to ",
              Cell[
               BoxData[
                ButtonBox[
                 "$TransformationRules",
                 BaseStyle -> "Link",
                 ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/$TransformationRules"
                ]
               ],
               "InlineFormula"
              ],
              " in Kernel/CanonicalForms/Rules.m."
             }
            ],
            "Text",
            CellID -> 4936573
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               TextData[
                {
                 "The format of elements in ",
                 Cell[
                  BoxData[
                   ButtonBox[
                    "$TransformationRules",
                    BaseStyle -> "Link",
                    ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/$TransformationRules"
                   ]
                  ],
                  "InlineFormula"
                 ],
                 " is somewhat flexible. Items can be given as single transformation rules, such as:"
                }
               ],
               "Text",
               CellID -> 72451560
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  RowBox[
                   {"HoldPattern", "[", RowBox[{"RandomReal", "[", "]"}], "]"}
                  ],
                  "\[RuleDelayed]",
                  RowBox[{"RandomReal", "[", "1", "]"}]
                 }
                ]
               ],
               "Input",
               CellID -> 455932392
              ]
             },
             Open
            ]
           ],
           Cell[
            TextData[
             {
              "However, in order to separate rules into conceptual categories, it can also accept groups of transformation rules (wrapped in ",
              Cell[
               BoxData[ButtonBox["List", BaseStyle -> "Link"]],
               "InlineFormula"
              ],
              " or ",
              Cell[
               BoxData[ButtonBox["HoldComplete", BaseStyle -> "Link"]],
               "InlineFormula"
              ],
              "), which is how almost all the rules are defined in Kernel/CanonicalForms/Rules.m. "
             }
            ],
            "Text",
            CellID -> 509901454
           ],
           Cell[
            TextData[
             {
              "For convenience, when rules are contained inside a ",
              Cell[
               BoxData[ButtonBox["HoldComplete", BaseStyle -> "Link"]],
               "InlineFormula"
              ],
              ", the build code will automatically wrap the left-hand side of the rules in ",
              Cell[
               BoxData[ButtonBox["HoldPattern", BaseStyle -> "Link"]],
               "InlineFormula"
              ],
              ", so the previous rule (if given inside a ",
              Cell[
               BoxData[ButtonBox["HoldComplete", BaseStyle -> "Link"]],
               "InlineFormula"
              ],
              " group) could also be written as ",
              Cell[
               BoxData[
                RowBox[
                 {
                  RowBox[
                   {ButtonBox["RandomReal", BaseStyle -> "Link"], "[", "]"}
                  ],
                  "\[RuleDelayed]",
                  RowBox[
                   {
                    ButtonBox["RandomReal", BaseStyle -> "Link"],
                    "[",
                    "1",
                    "]"
                   }
                  ]
                 }
                ]
               ],
               "InlineFormula"
              ],
              " which is a bit easier to read."
             }
            ],
            "Text",
            CellID -> 742162078
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "New method (still a work in progress)",
            "Subsection",
            CellID -> 416209959
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Eventually, rules will be stored as associations that contain additional metadata. For this example, the corresponding transformation rule could be written as:",
               "Text",
               CellID -> 189851454
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  "<|",
                  "\[IndentingNewLine]",
                  RowBox[
                   {
                    RowBox[{"\"Category\"", "\[Rule]", "\"Random\""}],
                    ",",
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "\"Usage\"",
                      "\[Rule]",
                      RowBox[{"{", "\"CanonicalForm\"", "}"}]
                     }
                    ],
                    ",",
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "\"Rule\"",
                      "\[Rule]",
                      RowBox[
                       {
                        RowBox[
                         {"HoldPattern", "[", RowBox[{"RandomReal", "[", "]"}], "]"}
                        ],
                        "\[RuleDelayed]",
                        RowBox[{"RandomReal", "[", "1", "]"}]
                       }
                      ]
                     }
                    ],
                    ",",
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "\"Description\"",
                      "\[Rule]",
                      "\"Eliminate instances of RandomReal with no arguments.\""
                     }
                    ]
                   }
                  ],
                  "\[IndentingNewLine]",
                  "|>"
                 }
                ]
               ],
               "Input",
               CellID -> 561974752
              ]
             },
             Open
            ]
           ],
           Cell[
            "However, this system is still a work in progress and subject to change, so don\[CloseCurlyQuote]t worry about it too much yet.",
            "Text",
            CellID -> 20979915
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Adding new unit tests",
         "Section",
         CellID -> 399243430
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "Once a new rule is added, a corresponding unit test should be added to Tests/CanonicalForms/Rules.wlt. In this case, the following test would be appropriate:",
            "Text",
            CellID -> 289390187
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "VerificationTest",
                  "[",
                  "\[IndentingNewLine]",
                  RowBox[
                   {
                    RowBox[
                     {
                      "ToCanonicalForm",
                      "[",
                      RowBox[
                       {
                        "HoldComplete",
                        "[",
                        RowBox[
                         {
                          "Table",
                          "[",
                          RowBox[{RowBox[{"RandomReal", "[", "]"}], ",", "10"}],
                          "]"
                         }
                        ],
                        "]"
                       }
                      ],
                      "]"
                     }
                    ],
                    ",",
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "ToCanonicalForm",
                      "[",
                      RowBox[
                       {
                        "HoldComplete",
                        "[",
                        RowBox[{"RandomReal", "[", RowBox[{"1", ",", "10"}], "]"}],
                        "]"
                       }
                      ],
                      "]"
                     }
                    ]
                   }
                  ],
                  "\[IndentingNewLine]",
                  "]"
                 }
                ]
               ],
               "Input",
               CellID -> 55491650
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["TestResultObject", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False},
                    PanelBox[
                     PaneSelectorBox[
                      {
                       False ->
                        GridBox[
                         {
                          {
                           PaneBox[
                            ButtonBox[
                             DynamicBox[
                              FEPrivate`FrontEndResource[
                               "FEBitmaps",
                               "SquarePlusIconMedium"
                              ],
                              ImageSizeCache -> {12.0, {0.0, 12.0}}
                             ],
                             Appearance -> None,
                             ButtonFunction :> (Typeset`open$$ = True),
                             Evaluator -> Automatic,
                             Method -> "Preemptive"
                            ],
                            Alignment -> {Center, Center},
                            ImageSize ->
                             Dynamic[
                              {
                               Automatic,
                               Times[
                                3.5,
                                Times[
                                 CurrentValue["FontCapHeight"],
                                 AbsoluteCurrentValue[Magnification]^(-1)
                                ]
                               ]
                              }
                             ]
                           ],
                           GraphicsBox[
                            InsetBox[
                             PaneBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource[
                                "MUnitExpressions",
                                "SuccessIcon"
                               ],
                               ImageSizeCache -> {16.0, {4.0, 8.0}}
                              ],
                              Alignment -> Center,
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ]
                            ],
                            AspectRatio -> 1,
                            Axes -> False,
                            Background -> GrayLevel[0.93],
                            Frame -> True,
                            FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.55]],
                            FrameTicks -> None,
                            ImageSize -> {
                             Automatic,
                             Dynamic[
                              Times[
                               3.5,
                               Times[
                                CurrentValue["FontCapHeight"],
                                AbsoluteCurrentValue[Magnification]^(-1)
                               ]
                              ]
                             ]
                            },
                            PlotRange -> {{0, 1}, {0, 1}}
                           ],
                           GridBox[
                            {
                             {
                              RowBox[
                               {
                                TagBox["\"Outcome: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"Success\"", "SummaryItem"]
                               }
                              ]
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Test ID: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["None", "SummaryItem"]
                               }
                              ]
                             }
                            },
                            AutoDelete -> False,
                            BaseStyle -> {
                             ShowStringCharacters -> False,
                             NumberMarks -> False,
                             PrintPrecision -> 3,
                             ShowSyntaxStyles -> False
                            },
                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                           ]
                          }
                         },
                         AutoDelete -> False,
                         BaselinePosition -> {1, 1},
                         GridBoxAlignment -> {"Rows" -> {{Top}}},
                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                        ],
                       True ->
                        GridBox[
                         {
                          {
                           PaneBox[
                            ButtonBox[
                             DynamicBox[
                              FEPrivate`FrontEndResource[
                               "FEBitmaps",
                               "SquareMinusIconMedium"
                              ]
                             ],
                             Appearance -> None,
                             ButtonFunction :> (Typeset`open$$ = False),
                             Evaluator -> Automatic,
                             Method -> "Preemptive"
                            ],
                            Alignment -> {Center, Center},
                            ImageSize ->
                             Dynamic[
                              {
                               Automatic,
                               Times[
                                3.5,
                                Times[
                                 CurrentValue["FontCapHeight"],
                                 AbsoluteCurrentValue[Magnification]^(-1)
                                ]
                               ]
                              }
                             ]
                           ],
                           GraphicsBox[
                            InsetBox[
                             PaneBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource[
                                "MUnitExpressions",
                                "SuccessIcon"
                               ]
                              ],
                              Alignment -> Center,
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ]
                            ],
                            AspectRatio -> 1,
                            Axes -> False,
                            Background -> GrayLevel[0.93],
                            Frame -> True,
                            FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.55]],
                            FrameTicks -> None,
                            ImageSize -> {
                             Automatic,
                             Dynamic[
                              Times[
                               3.5,
                               Times[
                                CurrentValue["FontCapHeight"],
                                AbsoluteCurrentValue[Magnification]^(-1)
                               ]
                              ]
                             ]
                            },
                            PlotRange -> {{0, 1}, {0, 1}}
                           ],
                           GridBox[
                            {
                             {
                              RowBox[
                               {
                                TagBox["\"Outcome: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["\"Success\"", "SummaryItem"]
                               }
                              ]
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Test ID: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox["None", "SummaryItem"]
                               }
                              ]
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Input: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 PaneBox[
                                  TagBox[
                                   RowBox[
                                    {
                                     "ToCanonicalForm",
                                     "[",
                                     RowBox[
                                      {
                                       "HoldComplete",
                                       "[",
                                       RowBox[
                                        {
                                         "Table",
                                         "[",
                                         RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}],
                                         "]"
                                        }
                                       ],
                                       "]"
                                      }
                                     ],
                                     "]"
                                    }
                                   ],
                                   Short[#1, Rational[2, 3]] &
                                  ],
                                  BaselinePosition -> Baseline,
                                  ContentPadding -> False,
                                  FrameMargins -> 0,
                                  ImageSize -> {{1, 500}, Automatic},
                                  StripOnInput -> True
                                 ],
                                 "SummaryItem"
                                ]
                               }
                              ]
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Expected output: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 PaneBox[
                                  TagBox[
                                   RowBox[
                                    {
                                     "HoldComplete",
                                     "[",
                                     RowBox[
                                      {
                                       "Table",
                                       "[",
                                       RowBox[
                                        {
                                         RowBox[
                                          {
                                           "RandomValue",
                                           "[",
                                           RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}],
                                           "]"
                                          }
                                         ],
                                         ",",
                                         RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]
                                        }
                                       ],
                                       "]"
                                      }
                                     ],
                                     "]"
                                    }
                                   ],
                                   Short[#1, Rational[2, 3]] &
                                  ],
                                  BaselinePosition -> Baseline,
                                  ContentPadding -> False,
                                  FrameMargins -> 0,
                                  ImageSize -> {{1, 500}, Automatic},
                                  StripOnInput -> True
                                 ],
                                 "SummaryItem"
                                ]
                               }
                              ]
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Actual output: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 PaneBox[
                                  TagBox[
                                   RowBox[
                                    {
                                     "HoldComplete",
                                     "[",
                                     RowBox[
                                      {
                                       "Table",
                                       "[",
                                       RowBox[
                                        {
                                         RowBox[
                                          {
                                           "RandomValue",
                                           "[",
                                           RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}],
                                           "]"
                                          }
                                         ],
                                         ",",
                                         RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]
                                        }
                                       ],
                                       "]"
                                      }
                                     ],
                                     "]"
                                    }
                                   ],
                                   Short[#1, Rational[2, 3]] &
                                  ],
                                  BaselinePosition -> Baseline,
                                  ContentPadding -> False,
                                  FrameMargins -> 0,
                                  ImageSize -> {{1, 500}, Automatic},
                                  StripOnInput -> True
                                 ],
                                 "SummaryItem"
                                ]
                               }
                              ]
                             },
                             {
                              RowBox[
                               {
                                TagBox["\"Time Taken: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 PaneBox[
                                  TagBox[
                                   TemplateBox[
                                    {
                                     "0.0065097`4.9640759723684305",
                                     "\"s\"",
                                     "seconds",
                                     "\"Seconds\""
                                    },
                                    "Quantity"
                                   ],
                                   Short[#1, Rational[2, 3]] &
                                  ],
                                  BaselinePosition -> Baseline,
                                  ContentPadding -> False,
                                  FrameMargins -> 0,
                                  ImageSize -> {{1, 500}, Automatic},
                                  StripOnInput -> True
                                 ],
                                 "SummaryItem"
                                ]
                               }
                              ]
                             }
                            },
                            AutoDelete -> False,
                            BaseStyle -> {
                             ShowStringCharacters -> False,
                             NumberMarks -> False,
                             PrintPrecision -> 3,
                             ShowSyntaxStyles -> False
                            },
                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                           ]
                          }
                         },
                         AutoDelete -> False,
                         BaselinePosition -> {1, 1},
                         GridBoxAlignment -> {"Rows" -> {{Top}}},
                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                        ]
                      },
                      Dynamic[Typeset`open$$],
                      ImageSize -> Automatic
                     ],
                     BaselinePosition -> Baseline
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 TestResultObject[
                  <|
                   "TestIndex" -> 1,
                   "TestID" -> None,
                   "Outcome" -> "Success",
                   "Input" ->
                    HoldForm[
                     CodeEquivalence`ToCanonicalForm[
                      HoldComplete[Table[RandomReal[], 10]]
                     ]
                    ],
                   "ExpectedOutput" ->
                    HoldForm[
                     HoldComplete[
                      Table[
                       CodeEquivalence`CanonicalForms`Common`RandomValue[
                        UniformDistribution[{0, 1}]
                       ],
                       {
                        CodeEquivalence`Types`TypedSymbol[
                         CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                         Blank[Integer]
                        ],
                        1,
                        10,
                        1
                       }
                      ]
                     ]
                    ],
                   "ActualOutput" ->
                    HoldForm[
                     HoldComplete[
                      Table[
                       CodeEquivalence`CanonicalForms`Common`RandomValue[
                        UniformDistribution[{0, 1}]
                       ],
                       {
                        CodeEquivalence`Types`TypedSymbol[
                         CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1,
                         Blank[Integer]
                        ],
                        1,
                        10,
                        1
                       }
                      ]
                     ]
                    ],
                   "ExpectedMessages" -> { },
                   "ActualMessages" -> { },
                   "AbsoluteTimeUsed" -> Quantity[0.0065097, "Seconds"],
                   "CPUTimeUsed" -> Quantity[0.016, "Seconds"],
                   "MemoryUsed" -> Quantity[304, "Bytes"]
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellID -> 794344732
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Utilities for transformation rules",
         "Section",
         CellID -> 499267247
        ],
        Cell[
         BoxData[
          GridBox[
           {
            {
             ButtonBox[
              "TrEval",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/TrEval"
             ],
             Cell[
              "forces evaluation of the right-hand side of a transformation rule",
              "TableText"
             ]
            },
            {
             ButtonBox[
              "WithHolding",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/WithHolding"
             ],
             Cell[
              TextData[
               {
                "works like ",
                Cell[
                 BoxData[ButtonBox["With", BaseStyle -> "Link"]],
                 "InlineFormula"
                ],
                " in that assignments in the first argument are inserted into the second argument, but doesn\[CloseCurlyQuote]t evaluate the second argument"
               }
              ],
              "TableText"
             ]
            },
            {
             ButtonBox[
              "TempHold",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/TempHold"
             ],
             Cell[
              TextData[
               {
                "works like ",
                Cell[
                 BoxData[ButtonBox["HoldComplete", BaseStyle -> "Link"]],
                 "InlineFormula"
                ],
                ", except it gets removed automatically after each iteration of transformations"
               }
              ],
              "TableText"
             ]
            },
            {
             ButtonBox[
              "NewLocalSymbol",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/NewLocalSymbol"
             ],
             Cell[
              "forces evaluation of the right-hand side of a transformation rule",
              "TableText"
             ]
            },
            {
             ButtonBox[
              "LocalContextQ",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/LocalContextQ"
             ],
             Cell[
              "determines if a symbol is scoped locally",
              "TableText"
             ]
            },
            {
             ButtonBox[
              "SymbolQ",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/SymbolQ"
             ],
             Cell[
              "determines if an expression is an actual symbol",
              "TableText"
             ]
            },
            {
             ButtonBox[
              "Inline",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/Inline"
             ],
             Cell["replaces symbols with their value", "TableText"]
            },
            {
             ButtonBox[
              "SafeEvaluatedQ",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/SafeEvaluatedQ"
             ],
             Cell[
              "tests if an expression has been fully evaluated",
              "TableText"
             ]
            }
           }
          ]
         ],
         "DefinitionBox",
         CellID -> 444005851
        ],
        Cell[
         "Symbols that are useful in defining new transformation rules.",
         "Caption",
         CellID -> 379834843
        ],
        Cell[
         CellGroupData[
          {
           Cell["TrEval", "Subsubsection", CellID -> 525831222],
           Cell[
            CellGroupData[
             {
              Cell[
               "Forces evaluation of the right-hand side of a transformation rule.",
               "Text",
               CellID -> 581740758
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     RowBox[
                      {
                       "HoldComplete",
                       "[",
                       RowBox[
                        {
                         "Table",
                         "[",
                         RowBox[
                          {
                           "i",
                           ",",
                           RowBox[{"{", RowBox[{"i", ",", "1", ",", "5"}], "}"}]
                          }
                         ],
                         "]"
                        }
                       ],
                       "]"
                      }
                     ],
                     "/.",
                     RowBox[
                      {"n_Integer", "\[RuleDelayed]", RowBox[{"n", "+", "1"}]}
                     ]
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 46716950
                 ],
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "HoldComplete",
                     "[",
                     RowBox[
                      {
                       "Table",
                       "[",
                       RowBox[
                        {
                         "i",
                         ",",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             "i",
                             ",",
                             RowBox[{"1", "+", "1"}],
                             ",",
                             RowBox[{"5", "+", "1"}]
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ],
                       "]"
                      }
                     ],
                     "]"
                    }
                   ]
                  ],
                  "Output",
                  CellID -> 106028760
                 ]
                },
                Open
               ]
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     RowBox[
                      {
                       "HoldComplete",
                       "[",
                       RowBox[
                        {
                         "Table",
                         "[",
                         RowBox[
                          {
                           "i",
                           ",",
                           RowBox[{"{", RowBox[{"i", ",", "1", ",", "5"}], "}"}]
                          }
                         ],
                         "]"
                        }
                       ],
                       "]"
                      }
                     ],
                     "/.",
                     RowBox[
                      {
                       "n_Integer",
                       "\[RuleDelayed]",
                       RowBox[{"TrEval", "[", RowBox[{"n", "+", "1"}], "]"}]
                      }
                     ]
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 498338544
                 ],
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "HoldComplete",
                     "[",
                     RowBox[
                      {
                       "Table",
                       "[",
                       RowBox[
                        {
                         "i",
                         ",",
                         RowBox[{"{", RowBox[{"i", ",", "2", ",", "6"}], "}"}]
                        }
                       ],
                       "]"
                      }
                     ],
                     "]"
                    }
                   ]
                  ],
                  "Output",
                  CellID -> 104743684
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell["WithHolding", "Subsubsection", CellID -> 289759706],
           Cell[
            CellGroupData[
             {
              Cell[
               TextData[
                {
                 "Works like ",
                 Cell[
                  BoxData[ButtonBox["With", BaseStyle -> "Link"]],
                  "InlineFormula"
                 ],
                 " in that assignments in the first argument are inserted into the second argument, but doesn\[CloseCurlyQuote]t evaluate the second argument."
                }
               ],
               "Text",
               CellID -> 179388266
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     RowBox[
                      {"HoldComplete", "[", RowBox[{"f", "[", "1", "]"}], "]"}
                     ],
                     "/.",
                     RowBox[
                      {
                       RowBox[
                        {"HoldPattern", "[", RowBox[{"f", "[", "a_", "]"}], "]"}
                       ],
                       "\[RuleDelayed]",
                       RowBox[
                        {
                         "WithHolding",
                         "[",
                         RowBox[
                          {
                           RowBox[
                            {"{", RowBox[{"b", "=", RowBox[{"a", "+", "1"}]}], "}"}
                           ],
                           ",",
                           RowBox[{"Echo", "[", "b", "]"}]
                          }
                         ],
                         "]"
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 265867659
                 ],
                 Cell[
                  BoxData[
                   RowBox[
                    {"HoldComplete", "[", RowBox[{"Echo", "[", "2", "]"}], "]"}
                   ]
                  ],
                  "Output",
                  CellID -> 29605097
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Also allows use of local values in subsequent assignments:",
               "Text",
               CellID -> 646417102
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     RowBox[
                      {"HoldComplete", "[", RowBox[{"f", "[", "1", "]"}], "]"}
                     ],
                     "/.",
                     RowBox[
                      {
                       RowBox[
                        {"HoldPattern", "[", RowBox[{"f", "[", "a_", "]"}], "]"}
                       ],
                       "\[RuleDelayed]",
                       RowBox[
                        {
                         "WithHolding",
                         "[",
                         RowBox[
                          {
                           RowBox[
                            {
                             "{",
                             RowBox[
                              {
                               RowBox[{"b", "=", RowBox[{"a", "+", "1"}]}],
                               ",",
                               RowBox[{"c", "=", RowBox[{"b", "+", "1"}]}]
                              }
                             ],
                             "}"
                            }
                           ],
                           ",",
                           RowBox[{"Echo", "[", RowBox[{"b", "+", "c"}], "]"}]
                          }
                         ],
                         "]"
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 81209063
                 ],
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "HoldComplete",
                     "[",
                     RowBox[{"Echo", "[", RowBox[{"2", "+", "3"}], "]"}],
                     "]"
                    }
                   ]
                  ],
                  "Output",
                  CellID -> 376379702
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell["TempHold", "Subsubsection", CellID -> 198103521],
           Cell[
            CellGroupData[
             {
              Cell[
               TextData[
                {
                 "Works like ",
                 Cell[
                  BoxData[ButtonBox["HoldComplete", BaseStyle -> "Link"]],
                  "InlineFormula"
                 ],
                 ", except it gets removed automatically after each iteration of transformations. For example, suppose we wanted all lists sorted:"
                }
               ],
               "Text",
               CellID -> 133323877
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   {
                    RowBox[
                     {
                      RowBox[
                       {
                        RowBox[
                         {
                          "rule",
                          "=",
                          RowBox[
                           {
                            RowBox[
                             {
                              "HoldPattern",
                              "[",
                              RowBox[
                               {
                                RowBox[{"{", "a___", "}"}],
                                "/;",
                                RowBox[
                                 {
                                  "!",
                                  RowBox[
                                   {
                                    "OrderedQ",
                                    "[",
                                    RowBox[{"HoldComplete", "[", "a", "]"}],
                                    "]"
                                   }
                                  ]
                                 }
                                ]
                               }
                              ],
                              "]"
                             }
                            ],
                            "\[RuleDelayed]",
                            RowBox[
                             {
                              "TrEval",
                              "@",
                              RowBox[
                               {
                                "{",
                                RowBox[
                                 {"Sort", "[", RowBox[{"TempHold", "[", "a", "]"}], "]"}
                                ],
                                "}"
                               }
                              ]
                             }
                            ]
                           }
                          ]
                         }
                        ],
                        ";"
                       }
                      ],
                      "\[IndentingNewLine]"
                     }
                    ],
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      RowBox[
                       {
                        "BuildDispatch",
                        "[",
                        RowBox[
                         {
                          "Append",
                          "[",
                          RowBox[{"$TransformationRules", ",", "rule"}],
                          "]"
                         }
                        ],
                        "]"
                       }
                      ],
                      ";"
                     }
                    ]
                   }
                  ],
                  "Input",
                  CellID -> 73290809
                 ],
                 Cell[
                  BoxData[
                   "\"Rebuilt transformation rules\\n----------------------------\\nCount:   138\\nAdded:   1\\nRemoved: 0\\n----------------------------\""
                  ],
                  "Print",
                  CellID -> 4409430
                 ]
                },
                Open
               ]
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "ToCanonicalForm",
                     "@",
                     RowBox[
                      {
                       "HoldComplete",
                       "[",
                       RowBox[
                        {
                         "{",
                         RowBox[
                          {
                           RowBox[{"Echo", "[", "2", "]"}],
                           ",",
                           RowBox[{"Echo", "[", "3", "]"}],
                           ",",
                           RowBox[{"Echo", "[", "1", "]"}]
                          }
                         ],
                         "}"
                        }
                       ],
                       "]"
                      }
                     ]
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 201663391
                 ],
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "HoldComplete",
                     "[",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         RowBox[{"Echo", "[", "1", "]"}],
                         ",",
                         RowBox[{"Echo", "[", "2", "]"}],
                         ",",
                         RowBox[{"Echo", "[", "3", "]"}]
                        }
                       ],
                       "}"
                      }
                     ],
                     "]"
                    }
                   ]
                  ],
                  "Output",
                  CellID -> 81385949
                 ]
                },
                Open
               ]
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     RowBox[{"BuildDispatch", "[", "$TransformationRules", "]"}],
                     ";"
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 76533616
                 ],
                 Cell[
                  BoxData[
                   "\"Rebuilt transformation rules\\n----------------------------\\nCount:   137\\nAdded:   0\\nRemoved: 1\\n----------------------------\""
                  ],
                  "Print",
                  CellID -> 288366863
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "NewLocalSymbol / LocalContextQ",
            "Subsubsection",
            CellID -> 248218401
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               TextData[
                {
                 Cell[
                  BoxData[
                   ButtonBox[
                    "NewLocalSymbol",
                    BaseStyle -> "Link",
                    ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/NewLocalSymbol"
                   ]
                  ],
                  "InlineFormula"
                 ],
                 " is similar to ",
                 Cell[
                  BoxData[ButtonBox["Unique", BaseStyle -> "Link"]],
                  "InlineFormula"
                 ],
                 ", but targets a specific context so that created symbols satisfy ",
                 Cell[
                  BoxData[
                   ButtonBox[
                    "LocalContextQ",
                    BaseStyle -> "Link",
                    ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/LocalContextQ"
                   ]
                  ],
                  "InlineFormula"
                 ],
                 ". Also includes some formatting rules for notebooks."
                }
               ],
               "Text",
               CellID -> 106018201
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[{"s", "=", RowBox[{"NewLocalSymbol", "[", "]"}]}]
                  ],
                  "Input",
                  CellID -> 133050779
                 ],
                 Cell[
                  BoxData[
                   InterpretationBox[
                    StyleBox[
                     "S",
                     LineColor -> RGBColor[0.28026, 0.715, 0.42921],
                     FrontFaceColor -> RGBColor[0.28026, 0.715, 0.42921],
                     BackFaceColor -> RGBColor[0.28026, 0.715, 0.42921],
                     GraphicsColor -> RGBColor[0.28026, 0.715, 0.42921],
                     FontWeight -> Bold,
                     FontSlant -> Italic,
                     FontColor -> RGBColor[0.28026, 0.715, 0.42921]
                    ],
                    CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S$12
                   ]
                  ],
                  "Output",
                  CellID -> 13836106
                 ]
                },
                Open
               ]
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[RowBox[{"InputForm", "[", "s", "]"}]],
                  "Input",
                  CellID -> 29830736
                 ],
                 Cell[
                  "CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S$12",
                  "Output",
                  CellID -> 170272303
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               TextData[
                {
                 Cell[
                  BoxData[
                   ButtonBox[
                    "LocalContextQ",
                    BaseStyle -> "Link",
                    ButtonData -> "paclet:Wolfram/CodeEquivalenceUtilities/ref/LocalContextQ"
                   ]
                  ],
                  "InlineFormula"
                 ],
                 " doesn\[CloseCurlyQuote]t evaluate it\[CloseCurlyQuote]s argument"
                }
               ],
               "Text",
               CellID -> 266801115
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[RowBox[{"LocalContextQ", "[", "s", "]"}]],
                  "Input",
                  CellID -> 665209672
                 ],
                 Cell[BoxData["False"], "Output", CellID -> 372169050]
                },
                Open
               ]
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "With",
                     "[",
                     RowBox[
                      {
                       RowBox[{"{", RowBox[{"s$", "=", "s"}], "}"}],
                       ",",
                       RowBox[{"LocalContextQ", "[", "s$", "]"}]
                      }
                     ],
                     "]"
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 588505670
                 ],
                 Cell[BoxData["True"], "Output", CellID -> 100410884]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell["Other forms:", "Text", CellID -> 448734709],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   {
                    RowBox[
                     {
                      RowBox[
                       {
                        RowBox[{"g", "[", "s_", "]"}],
                        ":=",
                        RowBox[{"Symbol", "[", "s", "]"}]
                       }
                      ],
                      ";"
                     }
                    ],
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      RowBox[
                       {
                        "{",
                        "\[IndentingNewLine]",
                        RowBox[
                         {
                          RowBox[{"NewLocalSymbol", "[", "]"}],
                          ",",
                          "\[IndentingNewLine]",
                          RowBox[{"NewLocalSymbol", "[", "1337", "]"}],
                          ",",
                          "\[IndentingNewLine]",
                          RowBox[{"NewLocalSymbol", "[", "symbol", "]"}],
                          ",",
                          "\[IndentingNewLine]",
                          RowBox[{"NewLocalSymbol", "[", "\"name\"", "]"}],
                          ",",
                          "\[IndentingNewLine]",
                          RowBox[
                           {
                            "NewLocalSymbol",
                            "[",
                            RowBox[{"g", "[", "\"definition\"", "]"}],
                            "]"
                           }
                          ]
                         }
                        ],
                        "\[IndentingNewLine]",
                        "}"
                       }
                      ],
                      "//",
                      "InputForm"
                     }
                    ]
                   }
                  ],
                  "Input",
                  CellID -> 8036041
                 ],
                 Cell[
                  "{CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S$23, \n CodeEquivalence`CanonicalForms`Scope`LocalSymbols`S1337, \n CodeEquivalence`CanonicalForms`Scope`LocalSymbols`symbol$24, \n CodeEquivalence`CanonicalForms`Scope`LocalSymbols`name$25, \n CodeEquivalence`CanonicalForms`Scope`LocalSymbols`definition$26}",
                  "Output",
                  CellID -> 326272982
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell["SymbolQ", "Subsubsection", CellID -> 98154813],
           Cell[
            CellGroupData[
             {
              Cell[
               "Useful for when matching against _Symbol isn\[CloseCurlyQuote]t enough:",
               "Text",
               CellID -> 373583641
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   {
                    RowBox[
                     {
                      "Cases",
                      "[",
                      RowBox[
                       {
                        RowBox[
                         {
                          "HoldComplete",
                          "[",
                          RowBox[
                           {"5", ",", "x", ",", RowBox[{"Symbol", "[", "\"x\"", "]"}]}
                          ],
                          "]"
                         }
                        ],
                        ",",
                        RowBox[
                         {
                          "s_Symbol",
                          "\[RuleDelayed]",
                          RowBox[{"HoldForm", "[", "s", "]"}]
                         }
                        ]
                       }
                      ],
                      "]"
                     }
                    ],
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "Cases",
                      "[",
                      RowBox[
                       {
                        RowBox[
                         {
                          "HoldComplete",
                          "[",
                          RowBox[
                           {"5", ",", "x", ",", RowBox[{"Symbol", "[", "\"x\"", "]"}]}
                          ],
                          "]"
                         }
                        ],
                        ",",
                        RowBox[
                         {
                          RowBox[{"s_", "?", "SymbolQ"}],
                          "\[RuleDelayed]",
                          RowBox[{"HoldForm", "[", "s", "]"}]
                         }
                        ]
                       }
                      ],
                      "]"
                     }
                    ]
                   }
                  ],
                  "Input",
                  CellID -> 239783834
                 ],
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "{",
                     RowBox[
                      {
                       TagBox["x", HoldForm],
                       ",",
                       TagBox[RowBox[{"Symbol", "[", "\"x\"", "]"}], HoldForm]
                      }
                     ],
                     "}"
                    }
                   ]
                  ],
                  "Output",
                  CellID -> 162565107
                 ],
                 Cell[
                  BoxData[RowBox[{"{", TagBox["x", HoldForm], "}"}]],
                  "Output",
                  CellID -> 19136922
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Doesn\[CloseCurlyQuote]t evaluate the symbol:",
               "Text",
               CellID -> 90302720
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   {
                    RowBox[
                     {
                      RowBox[{"y", ":=", RowBox[{"Echo", "[", "\"y\"", "]"}]}],
                      ";"
                     }
                    ],
                    "\[IndentingNewLine]",
                    RowBox[{"SymbolQ", "[", "y", "]"}]
                   }
                  ],
                  "Input",
                  CellID -> 310272048
                 ],
                 Cell[BoxData["True"], "Output", CellID -> 206197834]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell["Inline", "Subsubsection", CellID -> 585229328],
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {"ClearAll", "[", RowBox[{"a", ",", "b", ",", "c"}], "]"}
               ],
               ";"
              }
             ]
            ],
            "Input",
            CellID -> 362349327
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Replaces symbols with their value:",
               "Text",
               CellID -> 123488387
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   {
                    RowBox[{RowBox[{"a", "=", "1"}], ";"}],
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "Inline",
                      "[",
                      RowBox[
                       {
                        "a",
                        ",",
                        RowBox[
                         {
                          "HoldComplete",
                          "[",
                          RowBox[{"b", "[", RowBox[{"a", "+", "2"}], "]"}],
                          "]"
                         }
                        ]
                       }
                      ],
                      "]"
                     }
                    ]
                   }
                  ],
                  "Input",
                  CellID -> 10421964
                 ],
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "HoldComplete",
                     "[",
                     RowBox[{"b", "[", RowBox[{"1", "+", "2"}], "]"}],
                     "]"
                    }
                   ]
                  ],
                  "Output",
                  CellID -> 581421449
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               TextData[
                {
                 "Also works for simple ",
                 Cell[
                  BoxData[ButtonBox["DownValues", BaseStyle -> "Link"]],
                  "InlineFormula"
                 ],
                 " definitions:"
                }
               ],
               "Text",
               CellID -> 665882748
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   {
                    RowBox[
                     {
                      RowBox[
                       {
                        RowBox[{"b", "[", "x_", "]"}],
                        ":=",
                        RowBox[{"Echo", "[", RowBox[{"x", "+", "1"}], "]"}]
                       }
                      ],
                      ";"
                     }
                    ],
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "Inline",
                      "[",
                      RowBox[
                       {
                        RowBox[{"{", RowBox[{"a", ",", "b"}], "}"}],
                        ",",
                        RowBox[
                         {
                          "HoldComplete",
                          "[",
                          RowBox[{"b", "[", RowBox[{"a", "+", "2"}], "]"}],
                          "]"
                         }
                        ]
                       }
                      ],
                      "]"
                     }
                    ]
                   }
                  ],
                  "Input",
                  CellID -> 93414729
                 ],
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "HoldComplete",
                     "[",
                     RowBox[
                      {
                       "Echo",
                       "[",
                       RowBox[
                        {RowBox[{"(", RowBox[{"1", "+", "2"}], ")"}], "+", "1"}
                       ],
                       "]"
                      }
                     ],
                     "]"
                    }
                   ]
                  ],
                  "Output",
                  CellID -> 400787473
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               TextData[
                {
                 "When used in the second argument of ",
                 Cell[
                  BoxData[ButtonBox["SetDelayed", BaseStyle -> "Link"]],
                  "InlineFormula"
                 ],
                 ", the values are inserted at the time of definition:"
                }
               ],
               "Text",
               CellID -> 131663780
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  RowBox[
                   {
                    RowBox[{"c", "[", "x_", "]"}],
                    ":=",
                    RowBox[
                     {
                      "Inline",
                      "[",
                      RowBox[
                       {
                        RowBox[{"{", RowBox[{"a", ",", "b"}], "}"}],
                        ",",
                        RowBox[
                         {
                          "HoldComplete",
                          "[",
                          RowBox[{"b", "[", RowBox[{"a", "+", "x"}], "]"}],
                          "]"
                         }
                        ]
                       }
                      ],
                      "]"
                     }
                    ]
                   }
                  ],
                  ";"
                 }
                ]
               ],
               "Input",
               CellID -> 157696489
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[RowBox[{"Definition", "[", "c", "]"}]],
                  "Input",
                  CellID -> 900943050
                 ],
                 Cell[
                  BoxData[
                   InterpretationBox[
                    GridBox[
                     {
                      {
                       GridBox[
                        {
                         {
                          RowBox[
                           {
                            RowBox[{"c", "[", "x_", "]"}],
                            ":=",
                            RowBox[
                             {
                              "HoldComplete",
                              "[",
                              RowBox[
                               {
                                "Echo",
                                "[",
                                RowBox[
                                 {RowBox[{"(", RowBox[{"1", "+", "x"}], ")"}], "+", "1"}
                                ],
                                "]"
                               }
                              ],
                              "]"
                             }
                            ]
                           }
                          ]
                         }
                        },
                        BaselinePosition -> {Baseline, {1, 1}},
                        GridBoxAlignment -> {
                         "Columns" -> {{Left}},
                         "ColumnsIndexed" -> { },
                         "Rows" -> {{Baseline}},
                         "RowsIndexed" -> { }
                        },
                        GridBoxItemSize -> {
                         "Columns" -> {{Scaled[0.999]}},
                         "ColumnsIndexed" -> { },
                         "Rows" -> {{1.0}},
                         "RowsIndexed" -> { }
                        }
                       ]
                      }
                     },
                     BaselinePosition -> {Baseline, {1, 1}},
                     GridBoxAlignment -> {
                      "Columns" -> {{Left}},
                      "ColumnsIndexed" -> { },
                      "Rows" -> {{Baseline}},
                      "RowsIndexed" -> { }
                     }
                    ],
                    Null,
                    Editable -> False
                   ]
                  ],
                  "Output",
                  CellID -> 380016854
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "SafeEvaluatedQ",
            "Subsubsection",
            CellID -> 437916133
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Tests if an expression has been fully evaluated:",
               "Text",
               CellID -> 119784630
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {"SafeEvaluatedQ", "[", RowBox[{"1", "+", "1"}], "]"}
                   ]
                  ],
                  "Input",
                  CellID -> 193209182
                 ],
                 Cell[BoxData["False"], "Output", CellID -> 465567143]
                },
                Open
               ]
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[RowBox[{"SafeEvaluatedQ", "[", "2", "]"}]],
                  "Input",
                  CellID -> 150201069
                 ],
                 Cell[BoxData["True"], "Output", CellID -> 906195983]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Only works if the evaluation would be free of side effects:",
               "Text",
               CellID -> 215786080
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   RowBox[
                    {
                     "SafeEvaluatedQ",
                     "[",
                     RowBox[{"Echo", "[", RowBox[{"1", "+", "1"}], "]"}],
                     "]"
                    }
                   ]
                  ],
                  "Input",
                  CellID -> 412985288
                 ],
                 Cell[
                  BoxData["SandboxViolation"],
                  "Output",
                  CellID -> 271259313
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               "Useful for reducing simple subexpressions:",
               "Text",
               CellID -> 2086698
              ],
              Cell[
               CellGroupData[
                {
                 Cell[
                  BoxData[
                   {
                    RowBox[
                     {
                      RowBox[
                       {
                        "expr",
                        "=",
                        RowBox[
                         {
                          "HoldForm",
                          "[",
                          RowBox[
                           {
                            "Table",
                            "[",
                            RowBox[
                             {
                              RowBox[
                               {RowBox[{"(", RowBox[{"2", "+", "3"}], ")"}], "*", "i"}
                              ],
                              ",",
                              RowBox[
                               {
                                "{",
                                RowBox[
                                 {
                                  "i",
                                  ",",
                                  RowBox[{"Echo", "[", RowBox[{"2", "-", "1"}], "]"}],
                                  ",",
                                  "5"
                                 }
                                ],
                                "}"
                               }
                              ]
                             }
                            ],
                            "]"
                           }
                          ],
                          "]"
                         }
                        ]
                       }
                      ],
                      ";"
                     }
                    ],
                    "\[IndentingNewLine]",
                    RowBox[
                     {
                      "expr",
                      "/.",
                      RowBox[
                       {
                        RowBox[
                         {
                          RowBox[
                           {"e", ":", RowBox[{"Except", "[", "_HoldForm", "]"}]}
                          ],
                          "/;",
                          RowBox[{"!", RowBox[{"SafeEvaluatedQ", "[", "e", "]"}]}]
                         }
                        ],
                        "\[RuleDelayed]",
                        RowBox[{"TrEval", "[", "e", "]"}]
                       }
                      ]
                     }
                    ]
                   }
                  ],
                  "Input",
                  CellID -> 344184697
                 ],
                 Cell[
                  BoxData[
                   TagBox[
                    RowBox[
                     {
                      "Table",
                      "[",
                      RowBox[
                       {
                        RowBox[{"5", " ", "i"}],
                        ",",
                        RowBox[
                         {
                          "{",
                          RowBox[
                           {"i", ",", RowBox[{"Echo", "[", "1", "]"}], ",", "5"}
                          ],
                          "}"
                         }
                        ]
                       }
                      ],
                      "]"
                     }
                    ],
                    HoldForm
                   ]
                  ],
                  "Output",
                  CellID -> 559741653
                 ]
                },
                Open
               ]
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "More About",
         "TutorialMoreAboutSection",
         CellID -> 23220180
        ],
        Cell["XXXX", "TutorialMoreAbout", CellID -> 1567025153]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Related Tech Notes",
         "RelatedTutorialsSection",
         CellID -> 415694126
        ],
        Cell["XXXX", "RelatedTutorials", CellID -> 806871991]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Related Wolfram Education Group Courses",
         "TutorialRelatedLinksSection",
         CellID -> 415694148
        ],
        Cell["XXXX", "TutorialRelatedLinks", CellID -> 415694149]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ]
 },
 WindowStatusArea -> Automatic,
 TaggingRules -> {
  "WelcomeScreenSettings" -> {"FEStarting" -> False},
  "NotebookIndexQ" -> True,
  "NotebookLastIndexed" ->
   DateObject[
    {2021, 2, 19, 13, 35, 13.682},
    "Instant",
    "Gregorian",
    -5.0
   ],
  "NotebookUUID" -> "553273e1-809d-b2df-3b59-50f54845a6c4"
 },
 FrontEndVersion -> "13.0 for Microsoft Windows (64-bit) (November 11, 2021)",
 StyleDefinitions ->
  FrontEnd`FileName[
   {"Wolfram"},
   "TechNotePageStylesExt.nb",
   CharacterEncoding -> "UTF-8"
  ],
 ExpressionUUID -> "d24534ed-ad49-4a8e-a039-86436114c2ef"
]